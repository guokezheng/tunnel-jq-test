<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tunnel.business.mapper.bigScreenApiN.SdTunnelsDataMapper">

    <resultMap id="carResultMap" type="hashmap">
        <result column="order_hour" property="order_hour" javaType="int"/>
        <result column="count" property="count" javaType="int"/>
    </resultMap>

    <select id="getMajorEventDataCount"  resultType="int">
        SELECT
        count( 1 )
        FROM
        sd_event e
        LEFT JOIN sd_tunnels t ON e.tunnel_id = t.tunnel_id
        WHERE
        e.event_grade IN ( 3, 4 )
        AND t.poll = 0
        AND e.start_time BETWEEN CONCAT( CURDATE(), ' 00:00:00' )
        AND CONCAT( CURDATE(), ' 23:59:59' )
        <if test="dept != null and dept != ''">
            AND (t.dept_id = #{dept} OR t.dept_id IN ( SELECT q.dept_id FROM sys_dept q WHERE FIND_IN_SET (#{dept},q.ancestors) ))
        </if>
    </select>

    <select id="getMajorEventDataWarnCount" resultType="int">
        SELECT
            count( 1 )
        FROM
            sd_event A
                LEFT JOIN sd_event_type B ON A.event_type_id = B.id
                LEFT JOIN sd_tunnels t ON A.tunnel_id = t.tunnel_id
        WHERE
            A.event_grade IN ( 3, 4 )
          AND t.poll = 0
          AND B.prev_control_type = 1
          AND A.start_time BETWEEN CONCAT( CURDATE(), ' 00:00:00' )
          AND CONCAT( CURDATE(), ' 23:59:59' )
        <if test="dept != null and dept != ''">
            AND (t.dept_id = #{dept} OR t.dept_id IN ( SELECT q.dept_id FROM sys_dept q WHERE FIND_IN_SET (#{dept},q.ancestors) ))
        </if>
    </select>

    <select id="getMajorEventDataHandleWarnCount" resultType="int">
        SELECT
            count( 1 )
        FROM
            sd_event A
                LEFT JOIN sd_event_type B ON A.event_type_id = B.id
                LEFT JOIN sd_tunnels t ON A.tunnel_id = t.tunnel_id
        WHERE
            A.event_grade IN ( 3, 4 )
          AND B.prev_control_type = 1
          AND A.start_time BETWEEN CONCAT( CURDATE(), ' 00:00:00' )
          AND CONCAT( CURDATE(), ' 23:59:59' )
          AND A.event_state IN ( 0, 3 )
          AND t.poll = 0
        <if test="dept != null and dept != ''">
            AND (t.dept_id = #{dept} OR t.dept_id IN ( SELECT q.dept_id FROM sys_dept q WHERE FIND_IN_SET (#{dept},q.ancestors) ))
        </if>
    </select>

    <select id="getMajorEventDataEventCount" resultType="int">
        SELECT
            count( 1 )
        FROM
            sd_event A
                LEFT JOIN sd_event_type B ON A.event_type_id = B.id
                LEFT JOIN sd_tunnels t ON A.tunnel_id = t.tunnel_id
        WHERE
            A.event_grade IN ( 3, 4 )
            AND t.poll = 0
          AND B.prev_control_type = 0
          AND A.start_time BETWEEN CONCAT( CURDATE(), ' 00:00:00' )
            AND CONCAT(
                    CURDATE(),
                    ' 23:59:59'
                )
        <if test="dept != null and dept != ''">
            AND (t.dept_id = #{dept} OR t.dept_id IN ( SELECT q.dept_id FROM sys_dept q WHERE FIND_IN_SET (#{dept},q.ancestors) ))
        </if>
    </select>

    <select id="getMajorEventDataHandleEventCount" resultType="int">
        SELECT
            count( 1 )
        FROM
            sd_event A
                LEFT JOIN sd_event_type B ON A.event_type_id = B.id
                LEFT JOIN sd_tunnels t ON A.tunnel_id = t.tunnel_id
        WHERE
            A.event_grade IN ( 3, 4)
          AND B.prev_control_type = 0
          AND A.start_time BETWEEN CONCAT( CURDATE(), ' 00:00:00' )
          AND CONCAT( CURDATE(), ' 23:59:59' )
          AND A.event_state IN (0,3 )
          AND t.poll = 0
        <if test="dept != null and dept != ''">
            AND (t.dept_id = #{dept} OR t.dept_id IN ( SELECT q.dept_id FROM sys_dept q WHERE FIND_IN_SET (#{dept},q.ancestors) ))
        </if>
    </select>

    <select id="getMajorEventDataList" resultType="map">
        SELECT
            B.event_type AS eventType,
            B.simplify_name AS simplifyName,
            C.tunnel_name AS tunnelName,
            A.direction AS direction,
            A.event_state AS eventState,
            A.start_time AS createTime
        FROM
            sd_event A
            LEFT JOIN sd_event_type B ON A.event_type_id = B.id
            LEFT JOIN sd_tunnels C ON A.tunnel_id = C.tunnel_id
        WHERE
            A.event_grade IN ( 3, 4 )
          AND C.poll = 0
          AND B.prev_control_type IN ( 0, 1 )
          AND A.start_time BETWEEN CONCAT( CURDATE(), ' 00:00:00' )
          AND CONCAT( CURDATE(), ' 23:59:59' )
        <if test="dept != null and dept != ''">
            AND (C.dept_id = #{dept} OR C.dept_id IN ( SELECT q.dept_id FROM sys_dept q WHERE FIND_IN_SET (#{dept},q.ancestors) ))
        </if>
        ORDER BY
            A.create_time DESC
            LIMIT 30
</select>

    <select id="getAllTunnelsList" resultType="string">
        select tunnel_name as tunnelName from sd_tunnels order by tunnel_id
    </select>

    <select id="getListByPrevControlTypeId" resultType="map">
        select id as eventTypeId,event_type,simplify_name as simplifyName from sd_event_type where prev_control_type = #{prevControlTypeId}
    </select>

    <select id="getEventStatMonthDataByEventTypeId" resultType="int">
        SELECT
            count(*)
        FROM
            sd_event e
                LEFT JOIN sd_event_type et ON e.event_type_id = et.id
        WHERE
            1 = 1
          AND et.id = #{eventTypeId}
          AND e.tunnel_id = #{tunnelId}
          AND YEAR(e.start_time) = YEAR(NOW())
        GROUP BY
            e.event_type_id
    </select>

    <select id="getEventStatWeekDataByEventTypeId" resultType="int">
        SELECT
            count( B.id )
        FROM
            (
                SELECT
                    DATE_FORMAT( DATE_SUB( NOW(), INTERVAL 1 DAY ), '%m-%d' ) AS dayStr UNION ALL
                SELECT
                    DATE_FORMAT( DATE_SUB( NOW(), INTERVAL 2 DAY ), '%m-%d' ) AS dayStr UNION ALL
                SELECT
                    DATE_FORMAT( DATE_SUB( NOW(), INTERVAL 3 DAY ), '%m-%d' ) AS dayStr UNION ALL
                SELECT
                    DATE_FORMAT( DATE_SUB( NOW(), INTERVAL 4 DAY ), '%m-%d' ) AS dayStr UNION ALL
                SELECT
                    DATE_FORMAT( DATE_SUB( NOW(), INTERVAL 5 DAY ), '%m-%d' ) AS dayStr UNION ALL
                SELECT
                    DATE_FORMAT( DATE_SUB( NOW(), INTERVAL 6 DAY ), '%m-%d' ) AS dayStr UNION ALL
                SELECT
                    DATE_FORMAT( DATE_SUB( NOW(), INTERVAL 7 DAY ), '%m-%d' ) AS dayStr
            ) A
            LEFT JOIN (
                SELECT
                    DATE_FORMAT( e.start_time, '%m-%d' ) AS stime,
                    e.id
                FROM
                    sd_event e
                        LEFT JOIN sd_tunnels t ON e.tunnel_id = t.tunnel_id
                WHERE
                            1 = 1
                        AND e.event_type_id = #{eventTypeId}
                        AND YEAR ( e.start_time ) = YEAR (
                NOW())
                AND DATE_FORMAT( e.start_time, '%m-%d' ) >= DATE_FORMAT( DATE_SUB( NOW(), INTERVAL 1 WEEK ), '%m-%d' )
                AND t.poll = 0
                <if test="dept != null and dept != ''">
                    AND (t.dept_id = #{dept} OR t.dept_id IN ( SELECT q.dept_id FROM sys_dept q WHERE FIND_IN_SET (#{dept},q.ancestors) ))
                </if>
        ) B ON A.dayStr = B.stime
        WHERE
            1 = 1
        GROUP BY
            A.dayStr
        ORDER BY
            A.dayStr ASC
    </select>

    <select id="getCarFlowDataThisYearCount" resultType="int">
        select count(DISTINCT vehicle_id) from sd_radar_detect_data where  YEAR(detect_time) = YEAR(NOW())
    </select>

    <select id="getCarFlowDataLastYearCount" resultType="int">
        select count(DISTINCT vehicle_id) from sd_radar_detect_data where  YEAR(detect_time) = YEAR(DATE_SUB(NOW(), INTERVAL 1 YEAR));
    </select>

    <select id="getCarFlowDataTopList" resultType="map">

        select
            b.tunnel_id AS tunnelId,
            b.tunnel_name AS tunnelName,
            count(A.vehicle_id) AS `count`
        from
            sd_tunnels B

                left join
            (select DISTINCT vehicle_id,tunnel_id  from sd_radar_detect_data where  YEAR (detect_time) = YEAR (NOW()))  A

            ON A.tunnel_id = B.tunnel_id
        GROUP BY
            B.tunnel_id
        ORDER BY
            A.vehicle_id DESC
    </select>

    <select id="getCarFlowDataWeekList" resultType="int">

        select count(B.id) from (
           SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 DAY),'%m-%d') AS dayStr UNION ALL
           SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 2 DAY),'%m-%d') AS dayStr UNION ALL
           SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 3 DAY),'%m-%d') AS dayStr UNION ALL
           SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 4 DAY),'%m-%d') AS dayStr UNION ALL
           SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 5 DAY),'%m-%d') AS dayStr UNION ALL
           SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 6 DAY),'%m-%d') AS dayStr UNION ALL
           SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 7 DAY),'%m-%d') AS dayStr
       ) as A left join sd_radar_detect_data B on  A.dayStr = DATE_FORMAT(B.detect_time,'%m-%d') and YEAR(B.detect_time) = YEAR(NOW())

        GROUP BY A.`dayStr`
        order by A.`dayStr`

    </select>

    <select id="getTunnelCarNum" resultType="hashmap">
        SELECT
            t.tunnel_name AS tunnelName,
            IFNULL( sum( tv.car_number ), 0 ) AS carCount
        FROM
            sd_tunnels t
                LEFT JOIN sd_traffic_volume tv ON t.tunnel_id = tv.tunnel_id
        WHERE
            1 = 1
          AND t.poll = 0
          AND DATE_FORMAT( tv.create_time, '%Y-%m-%d' ) = DATE_FORMAT( NOW(), '%Y-%m-%d' )
        <if test="dept != null and dept != ''">
            AND (t.dept_id = #{dept} OR t.dept_id IN ( SELECT q.dept_id FROM sys_dept q WHERE FIND_IN_SET (#{dept},q.ancestors) ))
        </if>
        GROUP BY
            t.tunnel_name
        ORDER BY
            car_number DESC
    </select>

    <select id="getCarFlowDataList" resultMap="carResultMap">
        SELECT HOUR
            ( timeData.TIME ) AS order_hour,
            IFNULL( sum( hisData.carNum ), '0' ) AS count
        FROM
            (
            SELECT
            DATE_FORMAT( DATE_SUB( DATE_FORMAT( NOW(), '%Y-%m-%d' ), INTERVAL ( -( @i := @i + 1 ) ) HOUR ), '%Y-%m-%d %H' ) AS 'time'
            FROM
            (
            SELECT
            a
            FROM
            ( SELECT '1' AS a UNION SELECT '2' UNION SELECT '3' UNION SELECT '4' ) AS a
            JOIN ( SELECT '1' UNION SELECT '2' UNION SELECT '3' UNION SELECT '4' UNION SELECT '5' UNION SELECT '6' ) AS b ON 1
            ) AS b,(
            SELECT
            @i :=- 1
            ) AS i
            ) AS timeData
            LEFT JOIN (
            SELECT
            CONVERT(tv.car_number,SIGNED) AS carNum,
            DATE_FORMAT( tv.create_time, '%Y-%m-%d %H' ) AS DATE
            FROM
            sd_traffic_volume tv
            LEFT JOIN sd_tunnels t ON tv.tunnel_id = t.tunnel_id
            WHERE
            1 = 1
            AND DATE_FORMAT( tv.create_time, '%Y-%m-%d' ) = DATE_FORMAT( NOW(), '%Y-%m-%d' )
            AND t.poll = 0
            <if test="dept != null and dept != ''">
                AND (t.dept_id = #{dept} OR t.dept_id IN ( SELECT q.dept_id FROM sys_dept q WHERE FIND_IN_SET (#{dept},q.ancestors) ))
            </if>
            ) hisData ON timeData.TIME = hisData.DATE
        WHERE
            1 = 1
        GROUP BY
            order_hour
    </select>

    <select id="getVehicleTypeList" resultType="map">
        select id as vehicleTypeId,`vehicle_type_code` as vehicleTypeCode,vehicle_type_name as vehicleTypeName from sd_vehicle_type
    </select>

    <select id="getRealTimeCarFlowByVehicleTypeId" resultType="int">
        select count(B.id) from sd_tunnels A left join sd_vehicle_driving B on A.tunnel_id = B.tunnel_id  and B.vehicle_type = #{vehicleTypeId}

            and track_id not in (

                select track_id from sd_vehicle_driving  where travel_type = 2
            )

        GROUP BY A.tunnel_id
    </select>

    <select id="getIndexData24HoursEventCount" resultType="int">
        select count(1) from sd_event A left join sd_event_type B on A.event_type_id = B.id

        where event_grade in (3,4)  and  B.prev_control_type = 0 and A.create_time >= ( NOW( ) - INTERVAL 24 HOUR )
    </select>

    <select id="getIndexDataEventCount" resultType="int">
        select count(1) from sd_event A left join sd_event_type B on A.event_type_id = B.id

        where event_grade in (3,4)  and  B.prev_control_type = 0
    </select>

    <select id="getIndexDataEventSourceList" resultType="map">
        SELECT
            A.dict_label as eventSouce,
            IFNULL(B.count,0) as `count`
        FROM
            ( SELECT dict_label, dict_value FROM sys_dict_data WHERE dict_type = 'sd_event_source' ORDER BY dict_sort ) A
                LEFT JOIN
            (
                select A.event_source,count(1) as count from sd_event_type B left join  sd_event  A   on A.event_type_id = B.id

                where   B.prev_control_type = 0 and event_grade in (3,4)   and A.create_time >= ( NOW( ) - INTERVAL 24 HOUR )

                group by event_source
            ) B on A.dict_value = B.event_source
    </select>
    
    <select id="getIndexDataTravelVehicleFlowCount" resultType="int">
        select count(1) from sd_vehicle_driving

        where track_id not in (

            select track_id from sd_vehicle_driving  where travel_type = 2
        )

    </select>

    <select id="getIndexDataTravelVehicleFlowList" resultType="map">

        SELECT
            A.vehicle_type_name,
            A.count,
            round( A.count / B.count * 100, 2 ) AS percent
        FROM
            (
                SELECT
                    IFNULL( B.vehicle_type_name, '未知' ) AS vehicle_type_name,
                    count( 1 ) AS count
                FROM
                    sd_vehicle_driving A
                    LEFT JOIN sd_vehicle_type B ON A.vehicle_type = B.id
                WHERE
                    track_id NOT IN ( SELECT track_id FROM sd_vehicle_driving WHERE travel_type = 2 )
                GROUP BY
                    B.vehicle_type_name
            ) A
                LEFT JOIN (
                SELECT
                    count( 1 ) AS count
                FROM
                    sd_vehicle_driving
                WHERE
                    track_id NOT IN ( SELECT track_id FROM sd_vehicle_driving WHERE travel_type = 2 )) B ON 1 =1
    </select>

    <select id="getIndexDataImportantVehicleCount" resultType="int">
        select count(1) from sd_vehicle_driving A left join sd_vehicle_type B on A.vehicle_type = B.id

        where track_id not in (

            select track_id from sd_vehicle_driving  where travel_type = 2
        )
          and B.is_key_vehicle = 1
    </select>

    <select id="getIndexDataImportantVehicleList" resultType="map">

        select A.vehicle_type as vehicleType,count(1) as count from sd_vehicle_driving A left join sd_vehicle_type B on A.vehicle_type = B.id

        where track_id not in (

            select track_id from sd_vehicle_driving  where travel_type = 2
        )
          and B.is_key_vehicle = 1

        GROUP BY A.vehicle_type
    </select>

</mapper>
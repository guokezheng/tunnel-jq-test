<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tunnel.business.mapper.dataInfo.SdDeviceDataMapper">

    <resultMap type="SdDeviceData" id="SdDeviceDataResult">
        <result property="id"    column="id"    />
        <result property="deviceId"    column="device_id"    />
        <result property="itemId"    column="item_id"    />
        <result property="data"    column="data"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectSdDeviceDataVo">
        select id, device_id, item_id, data, create_by, create_time, update_by, update_time from sd_device_data
    </sql>

    <select id="selectSdDeviceDataList" parameterType="SdDeviceData" resultMap="SdDeviceDataResult">
        <include refid="selectSdDeviceDataVo"/>
        <where>
            <if test="deviceId != null  and deviceId != ''"> and device_id = #{deviceId}</if>
            <if test="itemId != null "> and item_id = #{itemId}</if>
            <if test="data != null  and data != ''"> and data = #{data}</if>
        </where>
    </select>

    <select id="selectSdDeviceDataById" parameterType="Long" resultMap="SdDeviceDataResult">
        <include refid="selectSdDeviceDataVo"/>
        where id = #{id}
    </select>

    <insert id="insertSdDeviceData" parameterType="SdDeviceData" useGeneratedKeys="true" keyProperty="id">
        insert into sd_device_data
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deviceId != null">device_id,</if>
            <if test="itemId != null">item_id,</if>
            <if test="data != null">data,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="deviceId != null">#{deviceId},</if>
            <if test="itemId != null">#{itemId},</if>
            <if test="data != null">#{data},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateSdDeviceData" parameterType="SdDeviceData">
        update sd_device_data
        <trim prefix="SET" suffixOverrides=",">
            <if test="deviceId != null">device_id = #{deviceId},</if>
            <if test="itemId != null">item_id = #{itemId},</if>
            <if test="data != null">data = #{data},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSdDeviceDataById" parameterType="Long">
        delete from sd_device_data where id = #{id}
    </delete>

    <delete id="deleteSdDeviceDataByIds" parameterType="String">
        delete from sd_device_data where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!--根据隧道id查询当前设备的监测状态、实时数据或状态-->
    <select id="getDeviceDataByTunnelId" parameterType="String" resultType="java.util.Map">
		select d.eq_id eqId,d.eq_name eqName,d.eq_tunnel_id eqTunnelId,d.eq_type eqType,
        ifnull(d.eq_status,2) eqStatus,d.eq_direction eqDirection,i.item_code itemCode,i.item_name itemName,
        i.unit,a.data,concat(a.data,ifnull(i.unit,'')) dataUnit
        from sd_devices d
        left join sd_device_type_item i on d.eq_type = i.device_type_id
        left join sd_device_data a on a.device_id = d.eq_id and a.item_id = i.id
        where d.eq_tunnel_id = #{tunnelId}
    </select>

    <select id="selectLastRecord" parameterType="SdDeviceData" resultMap="SdDeviceDataResult">
        <include refid="selectSdDeviceDataVo"/>
        <where>
            <if test="deviceId != null  and deviceId != ''"> and device_id = #{deviceId}</if>
            <if test="itemId != null "> and item_id = #{itemId}</if>
        </where>
        ORDER BY id desc LIMIT 1
    </select>

    <select id="getTodayCOVIData" resultType="hashmap">
        SELECT HOUR(t.time) order_hour, ifnull(sa.num,0) AS count FROM
            (SELECT   DATE_FORMAT( DATE_SUB( #{today},INTERVAL ( -(@i:=@i-1) ) HOUR ) ,'%Y-%m-%d %H') AS 'time'
            FROM (
            SELECT a  FROM
            (SELECT '1' AS a UNION SELECT '2' UNION SELECT '3' UNION SELECT '4'   ) AS a
            JOIN ( SELECT  '1' UNION SELECT '2' UNION SELECT '3' UNION SELECT '4' UNION SELECT '5' UNION SELECT '6' ) AS b
            ON 1
            ) AS b  ,(SELECT @i:=+1)  AS i) AS t
            LEFT JOIN
            (SELECT DATE_FORMAT(DATE_SUB( b.create_time,INTERVAL MINUTE(#{today})-60 MINUTE ) ,'%Y-%m-%d %H') AS date,
            cast(sum(data)/count(id) as DECIMAL(9, 3)) AS num
            FROM (SELECT a.id,a.data,a.create_time	from sd_device_data_record a WHERE a.create_time <![CDATA[ >= ]]> (#{today} - interval 25 hour)
            and a.device_id = #{deviceId} and item_id = #{itemId} ) b GROUP BY date )
            AS sa
        ON sa.date = DATE_FORMAT( t.time,'%Y-%m-%d %H') GROUP BY t.time ORDER BY sa.date
    </select>




</mapper>

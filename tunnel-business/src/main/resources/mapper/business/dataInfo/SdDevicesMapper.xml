<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tunnel.business.mapper.dataInfo.SdDevicesMapper">

    <resultMap type="SdDevices" id="SdDevicesResult">
        <result property="eqId"    column="eq_id"    />
        <result property="fEqId"    column="f_eq_id"    />
        <result property="eqTunnelId"    column="eq_tunnel_id"    />
        <result property="eqName"    column="eq_name"    />
        <result property="eqType"    column="eq_type"    />
        <result property="fEqType"    column="f_eq_type"    />
        <result property="eqModel"    column="eq_model"    />
        <result property="brandId"    column="brand_id"    />
        <result property="externalSystemId"    column="external_system_id"    />
        <result property="eqDirection"    column="eq_direction"    />
        <result property="lane"    column="lane"    />
        <result property="pile"    column="pile"    />
        <result property="pileNum"    column="pile_num"    />
        <result property="lat"    column="lat"    />
        <result property="lng"    column="lng"    />
        <result property="ip"    column="ip"    />
        <result property="port"    column="port"    />
        <result property="secureKey"    column="secure_key"    />
        <result property="eqUser"    column="eq_user"    />
        <result property="eqPwd"    column="eq_pwd"    />
        <result property="commProtocol"    column="comm_protocol"    />
        <result property="deliveryTime"    column="delivery_time"    />
        <result property="warrantyEndTime"    column="warranty_end_time"    />
        <result property="installTime"    column="install_time"    />
        <result property="useLife"    column="use_life"    />
        <result property="useStatus"    column="use_status"    />
        <result property="isMonitor"    column="is_monitor"    />
        <result property="portStatus"    column="port_status"    />
        <result property="portStatusTime"    column="port_status_time"    />
        <result property="gatewayNetstatus"    column="gateway_netstatus"    />
        <result property="gatewayNetstatusTime"    column="gateway_netstatus_time"    />
        <result property="eqStatus"    column="eq_status"    />
        <result property="eqStatusTime"    column="eq_status_time"    />
        <result property="controlPointAddress"    column="control_point_address"    />
        <result property="queryPointAddress"    column="query_point_address"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
        <result property="messageProtocol"    column="message_protocol"    />
        <result property="protocolId"    column="protocol_id"    />
        <result property="roadId"    column="road_id"    />
        <result property="sn"    column="sn"    />
        <result property="zxNum"    column="zxNum"    />
        <result property="lxNum"    column="lxNum"    />
        <result property="externalDeviceId"    column="external_device_id"    />
        <result property="associatedDeviceId"    column="associated_device_id"    />
        <association property="tunnelName" column="tunnel_id" javaType="SdTunnels" resultMap="tunnelResult"/>
        <association property="eqTypeName" column="type_id" javaType="SdEquipmentType" resultMap="eqTypeResult"/>
    </resultMap>

    <resultMap id="tunnelResult" type="SdTunnels">
        <id property="tunnelId" column="tunnel_id"/>
        <result property="tunnelName" column="tunnel_name"/>
        <result property="tunnelAddress" column="tunnel_address"/>
    </resultMap>

    <resultMap id="eqTypeResult" type="SdEquipmentType">
        <id property="typeId" column="type_id"/>
        <result property="typeName" column="type_name"/>
    </resultMap>

    <sql id="selectSdDevicesVo">
        select eq_id, f_eq_id, eq_tunnel_id, eq_name, eq_type, f_eq_type,eq_model, brand_id,external_system_id,
        eq_direction, lane, pile, pile_num, lat, lng, ip, port, secure_key, eq_user, eq_pwd, comm_protocol,
        delivery_time, warranty_end_time, install_time, use_life,
        use_status, is_monitor,port_status, port_status_time, gateway_netstatus, gateway_netstatus_time, eq_status,
        eq_status_time, control_point_address, query_point_address, create_by, create_time,
        update_by, update_time, remark,road_id,message_protocol,protocol_id,sn,external_device_id, associated_device_id
        from sd_devices
    </sql>



    <select id="selectSdDevicesList" parameterType="SdDevices" resultMap="SdDevicesResult">
        select a.eq_id, a.f_eq_id, a.eq_tunnel_id, a.eq_name, a.eq_type, a.eq_model, a.brand_id,
        a.eq_direction,
        a.lane, a.pile, a.pile_num, a.lat, a.lng,a.ip, a.port, a.secure_key, a.eq_user, a.eq_pwd, a.comm_protocol,
        a.delivery_time, a.warranty_end_time, a.install_time, a.use_life, a.use_status,a.is_monitor,
        a.port_status, a.port_status_time, a.gateway_netstatus, a.gateway_netstatus_time, a.eq_status, a.eq_status_time,
        a.control_point_address, a.query_point_address, a.create_by,
        a.create_time, a.update_by, a.update_time, a.remark, b.dept_id, c.dept_name
        from sd_devices a
        left join sd_tunnels b on a.eq_tunnel_id = b.tunnel_id
        left join sys_dept c on c.dept_id = b.dept_id
        <where>
            <if test="fEqId != null and fEqId != ''">
                and a.f_eq_id = #{fEqId}
            </if>
            <if test="eqTunnelId != null ">and a.eq_tunnel_id = #{eqTunnelId}</if>
            <if test="eqName != null  and eqName != ''">and a.eq_name like concat('%', #{eqName}, '%')</if>
            <if test="eqType != null ">and a.eq_type = #{eqType}</if>
            <if test="lane != null  and lane != ''">and a.lane = #{lane}</if>
            <if test="eqStatus != null  and eqStatus != ''">and a.eq_status = #{eqStatus}</if>
            <if test="isMonitor != null ">and a.is_monitor = #{isMonitor}</if>
            <if test="eqDirection != null  and eqDirection != ''">and a.eq_direction = #{eqDirection}</if>
            <if test="commProtocol != null and commProtocol !=''">
                and a.comm_protocol = #{commProtocol}
            </if>
            <if test="ip != null  and ip != ''">and a.ip = #{ip}</if>
            <if test="secureKey != null  and secureKey != ''">and a.secure_key = #{secureKey}</if>
            <if test="deptId != null ">
                AND (b.dept_id = #{deptId} OR c.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{deptId},d.ancestors) ))
            </if>
            ${params.dataScope}
        </where>
    </select>



    <select id="selectSdDevicesList_exp" parameterType="SdDevices" resultMap="SdDevicesResult">
        select a.eq_id, a.f_eq_id, a.eq_tunnel_id,c.tunnel_name, a.eq_name, a.eq_type,d.type_name, a.eq_model, a.brand_id,
        dit.dict_label as eq_direction,
        a.lane, a.pile, a.pile_num, a.lat, a.lng,a.ip, a.port, a.secure_key, a.eq_user, a.eq_pwd, a.comm_protocol,
        a.delivery_time, a.warranty_end_time, a.install_time, a.use_life, a.use_status,a.is_monitor,
        a.port_status, a.port_status_time, a.gateway_netstatus, a.gateway_netstatus_time, a.eq_status, a.eq_status_time,
        a.control_point_address, a.query_point_address, a.create_by,
        a.create_time, a.update_by, a.update_time, a.remark ,e.dept_name,c.dept_id,IFNULL(c.tunnel_address,'未配置') tunnel_address
        ,c.tunnel_name
        from sd_devices a
        left join sd_tunnels c on a.eq_tunnel_id = c.tunnel_id
        left join sd_equipment_type d on a.eq_type = d.type_id
        left join sys_dept e on e.dept_id = c.dept_id
        left join sys_dict_data dit on dit.dict_value = a.eq_direction
        <where>
            and dit.dict_type = 'sd_direction'
            <if test="fEqId != null and fEqId != ''">
                and a.f_eq_id = #{fEqId}
            </if>
            <if test="eqId != null and eqId != ''">and a.eq_id = #{eqId}</if>
            <if test="eqTunnelId != null and eqTunnelId != ''">and a.eq_tunnel_id = #{eqTunnelId}</if>
            <if test="eqName != null  and eqName != ''">and a.eq_name like concat('%', #{eqName}, '%')</if>
            <if test="eqType != null ">and a.eq_type = #{eqType}</if>
            <if test="eqStatus != null  and eqStatus != ''">and a.eq_status = #{eqStatus}</if>
            <if test="eqDirection != null  and eqDirection != ''">and a.eq_direction = #{eqDirection}</if>
            <if test="lane != null  and lane != ''">and a.lane = #{lane}</if>
            <if test="isMonitor != null  ">and a.is_monitor = #{isMonitor}</if>
            <if test="commProtocol != null and commProtocol !=''">
                and a.comm_protocol = #{commProtocol}
            </if>
            <if test="eqIds != null and eqIds.size()>0">
                AND a.eq_id IN
                <foreach item="item" index="index" collection="eqIds" open="("  close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="deptId != null ">
                AND (c.dept_id = #{deptId} OR c.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{deptId},d.ancestors) ))
            </if>
            ${params.dataScope}
        </where>
        order by a.create_time desc, a.update_time desc

    </select>

    <select id="selectSdDevicesById" parameterType="String" resultMap="SdDevicesResult">
        <include refid="selectSdDevicesVo"/>
        where eq_id = #{eqId}
    </select>

    <!--查询设备详情-->
    <select id="queryDeviceById" parameterType="String" resultType="java.util.Map">
        select a.eq_id eqId,a.eq_name eqName, a.f_eq_id fEqId,b.tunnel_id tunnelId, b.tunnel_name tunnelName,
        a.eq_type eqType,t.type_name typeName,s.dept_id deptId, s.dept_name deptName,
        a.eq_model eqModel, a.brand_id brandId,a.query_point_address,
        a.eq_direction eqDirection, a.lane, a.pile, a.pile_num pileNum, a.lat, a.lng,
        a.ip, a.port, a.secure_key secureKey, a.eq_user eqUser, a.eq_pwd eqPwd, a.comm_protocol,
        IFNULL(a.eq_status,"2") eqStatus,a.eq_status_time eqStatusTime,
        a.create_by createBy, a.create_time createTime, a.update_by updateBy, a.update_time updateTime, a.remark
        , a.associated_device_id associatedDeviceId, c.supplier_name supplierName
     from sd_devices a
     left join sd_tunnels b on a.eq_tunnel_id = b.tunnel_id
     left join sd_equipment_type t on a.eq_type = t.type_id
     left join sys_dept s on s.dept_id = b.dept_id
     left join sd_devices_brand c on c.supplier_id = a.brand_id
     where eq_id = #{eqId}
</select>


<!-- 下拉查询 -->
    <select id="selectDropSdDevicesList" parameterType="SdDevices" resultMap="SdDevicesResult">
        select a.eq_id, a.f_eq_id, a.eq_tunnel_id,c.tunnel_name, a.eq_name, a.eq_type,d.type_name, a.eq_model, a.brand_id,
        a.eq_direction,
        a.lane, a.pile, a.pile_num, a.lat, a.lng,a.ip, a.port, a.secure_key, a.eq_user, a.eq_pwd, a.comm_protocol,
        a.delivery_time, a.warranty_end_time, a.install_time, a.use_life, a.use_status,a.is_monitor,
        a.port_status, a.port_status_time, a.gateway_netstatus, a.gateway_netstatus_time, a.eq_status, a.eq_status_time,
        a.control_point_address, a.query_point_address, a.create_by,
        a.create_time, a.update_by, a.update_time, a.remark ,e.dept_name,c.dept_id,IFNULL(c.tunnel_address,'未配置') tunnel_address
        ,c.tunnel_name
        from sd_devices a
        left join sd_tunnels c on a.eq_tunnel_id = c.tunnel_id
        left join sd_equipment_type d on a.eq_type = d.type_id
        left join sys_dept e on e.dept_id = c.dept_id
        <where>
            <if test="fEqId != null and fEqId != ''">
                and a.f_eq_id = #{fEqId}
            </if>
            <if test="eqId != null and eqId != ''">and a.eq_id = #{eqId}</if>
            <if test="eqTunnelId != null and eqTunnelId != ''">and a.eq_tunnel_id = #{eqTunnelId}</if>
            <if test="eqName != null  and eqName != ''">and a.eq_name like concat('%', #{eqName}, '%')</if>
            <if test="eqType != null ">and a.eq_type = #{eqType}</if>
            <if test="eqStatus != null  and eqStatus != ''">and a.eq_status = #{eqStatus}</if>
            <if test="eqDirection != null  and eqDirection != ''">and a.eq_direction = #{eqDirection}</if>
            <if test="lane != null  and lane != ''">and a.lane = #{lane}</if>
            <if test="isMonitor != null  ">and a.is_monitor = #{isMonitor}</if>
            <if test="pileNum != null  ">and a.pile_num = #{pileNum}</if>
            <if test="commProtocol != null and commProtocol !=''">
                and a.comm_protocol = #{commProtocol}
            </if>
            <if test="eqIds != null and eqIds.size()>0">
                AND a.eq_id IN
                <foreach item="item" index="index" collection="eqIds" open="("  close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="deptId != null ">
                AND (c.dept_id = #{deptId} OR c.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{deptId},d.ancestors) ))
            </if>
            ${params.dataScope}
        </where>
        order by a.create_time desc, a.update_time desc
    </select>




    <insert id="insertSdDevices" parameterType="SdDevices">
        insert into sd_devices
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="eqId != null">eq_id,</if>
            <if test="fEqId != null">f_eq_id,</if>
            <if test="eqTunnelId != null">eq_tunnel_id,</if>
            <if test="eqName != null">eq_name,</if>
            <if test="eqType != null">eq_type,</if>
            <if test="eqModel != null">eq_model,</if>
            <if test="brandId != null">brand_id,</if>
            <if test="externalSystemId != null">external_system_id,</if>
            <if test="fEqType != null">f_eq_type,</if>
            <if test="eqDirection != null">eq_direction,</if>
            <if test="lane != null">lane,</if>
            <if test="pile != null">pile,</if>
            <if test="pileNum != null">pile_num,</if>
            <if test="lat != null">lat,</if>
            <if test="lng != null">lng,</if>
            <if test="ip != null">ip,</if>
            <if test="port != null">port,</if>
            <if test="secureKey != null">secure_key,</if>
            <if test="eqUser != null">eq_user,</if>
            <if test="eqPwd != null">eq_pwd,</if>
            <if test="commProtocol != null">comm_protocol,</if>
            <if test="deliveryTime != null">delivery_time,</if>
            <if test="warrantyEndTime != null">warranty_end_time,</if>
            <if test="installTime != null">install_time,</if>
            <if test="useLife != null">use_life,</if>
            <if test="useStatus != null">use_status,</if>
            <if test="isMonitor!= null">is_monitor,</if>
            <if test="portStatus != null">port_status,</if>
            <if test="portStatusTime != null">port_status_time,</if>
            <if test="gatewayNetstatus != null">gateway_netstatus,</if>
            <if test="gatewayNetstatusTime != null">gateway_netstatus_time,</if>
            <if test="eqStatus != null">eq_status,</if>
            <if test="eqStatusTime != null">eq_status_time,</if>
            <if test="controlPointAddress != null">control_point_address,</if>
            <if test="queryPointAddress != null">query_point_address,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
            <if test="messageProtocol != null">message_protocol,</if>
            <if test="protocolId != null">protocol_id,</if>
            <if test="roadId != null">road_id,</if>
            <if test="sn != null">sn,</if>
            <if test="externalDeviceId != null">external_device_id,</if>
            <if test="associatedDeviceId != null">associated_device_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="eqId != null">#{eqId},</if>
            <if test="fEqId != null">#{fEqId},</if>
            <if test="eqTunnelId != null">#{eqTunnelId},</if>
            <if test="eqName != null">#{eqName},</if>
            <if test="eqType != null">#{eqType},</if>
            <if test="eqModel != null">#{eqModel},</if>
            <if test="brandId != null">#{brandId},</if>
            <if test="externalSystemId != null">#{externalSystemId},</if>
            <if test="fEqType != null">#{fEqType},</if>
            <if test="eqDirection != null">#{eqDirection},</if>
            <if test="lane != null">#{lane},</if>
            <if test="pile != null">#{pile},</if>
            <if test="pileNum != null">#{pileNum},</if>
            <if test="lat != null">#{lat},</if>
            <if test="lng != null">#{lng},</if>
            <if test="ip != null">#{ip},</if>
            <if test="port != null">#{port},</if>
            <if test="secureKey != null">#{secureKey},</if>
            <if test="eqUser != null">#{eqUser},</if>
            <if test="eqPwd != null">#{eqPwd},</if>
            <if test="commProtocol != null">#{commProtocol},</if>
            <if test="deliveryTime != null">#{deliveryTime},</if>
            <if test="warrantyEndTime != null">#{warrantyEndTime},</if>
            <if test="installTime != null">#{installTime},</if>
            <if test="useLife != null">#{useLife},</if>
            <if test="useStatus != null">#{useStatus},</if>
            <if test="isMonitor!= null">#{isMonitor},</if>
            <if test="portStatus != null">#{portStatus},</if>
            <if test="portStatusTime != null">#{portStatusTime},</if>
            <if test="gatewayNetstatus != null">#{gatewayNetstatus},</if>
            <if test="gatewayNetstatusTime != null">#{gatewayNetstatusTime},</if>
            <if test="eqStatus != null">#{eqStatus},</if>
            <if test="eqStatusTime != null">#{eqStatusTime},</if>
            <if test="controlPointAddress != null">#{controlPointAddress},</if>
            <if test="queryPointAddress != null">#{queryPointAddress},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
            <if test="messageProtocol != null">#{messageProtocol},</if>
            <if test="protocolId != null">#{protocolId},</if>
            <if test="roadId != null">#{roadId},</if>
            <if test="sn != null">#{sn},</if>
            <if test="externalDeviceId != null">#{externalDeviceId},</if>
            <if test="associatedDeviceId != null">#{associatedDeviceId},</if>
         </trim>
    </insert>

    <update id="updateSdDevices" parameterType="SdDevices">
        update sd_devices
        <trim prefix="SET" suffixOverrides=",">
            <if test="fEqId != null">f_eq_id = #{fEqId},</if>
            <if test="eqTunnelId != null">eq_tunnel_id = #{eqTunnelId},</if>
            <if test="eqName != null">eq_name = #{eqName},</if>
            <if test="eqType != null">eq_type = #{eqType},</if>
            <if test="eqModel != null">eq_model = #{eqModel},</if>
            <if test="brandId != null">brand_id = #{brandId},</if>
            <if test="externalSystemId != null">external_system_id = #{externalSystemId},</if>
            <if test="fEqType != null">f_eq_type = #{fEqType},</if>
            <if test="eqDirection != null">eq_direction = #{eqDirection},</if>
            <if test="lane != null">lane = #{lane},</if>
            <if test="pile != null">pile = #{pile},</if>
            <if test="pileNum != null">pile_num = #{pileNum},</if>
            <if test="lat != null">lat = #{lat},</if>
            <if test="lng != null">lng = #{lng},</if>
            <if test="ip != null">ip = #{ip},</if>
            <if test="port != null">port = #{port},</if>
            <if test="secureKey != null">secure_key = #{secureKey},</if>
            <if test="eqUser != null">eq_user = #{eqUser},</if>
            <if test="eqPwd != null">eq_pwd = #{eqPwd},</if>
            <if test="commProtocol != null">comm_protocol = #{commProtocol},</if>
            <if test="deliveryTime != null">delivery_time = #{deliveryTime},</if>
            <if test="warrantyEndTime != null">warranty_end_time = #{warrantyEndTime},</if>
            <if test="installTime != null">install_time = #{installTime},</if>
            <if test="useLife != null">use_life = #{useLife},</if>
            <if test="useStatus != null">use_status = #{useStatus},</if>
            <if test="isMonitor != null">is_monitor = #{isMonitor},</if>
            <if test="portStatus != null">port_status = #{portStatus},</if>
            <if test="portStatusTime != null">port_status_time = #{portStatusTime},</if>
            <if test="gatewayNetstatus != null">gateway_netstatus = #{gatewayNetstatus},</if>
            <if test="gatewayNetstatusTime != null">gateway_netstatus_time = #{gatewayNetstatusTime},</if>
            <if test="eqStatus != null">eq_status = #{eqStatus},</if>
            <if test="eqStatusTime != null">eq_status_time = #{eqStatusTime},</if>
            <if test="controlPointAddress != null">control_point_address = #{controlPointAddress},</if>
            <if test="queryPointAddress != null">query_point_address = #{queryPointAddress},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="messageProtocol != null">message_protocol = #{messageProtocol},</if>
            <if test="protocolId != null">protocol_id = #{protocolId},</if>
            <if test="roadId != null">road_id = #{roadId},</if>
            <if test="sn != null">sn = #{sn},</if>
            <if test="externalDeviceId != null">external_device_id = #{externalDeviceId},</if>
            <if test="associatedDeviceId != null">associated_device_id = #{associatedDeviceId},</if>
        </trim>
        where eq_id = #{eqId}
    </update>
    <update id="updateSdDevicesBatch">
        update sd_devices
        set eq_status = #{eqStatus}
        where eq_id = #{eqId}
    </update>

    <update id="updateSdDevicesByFEqId">
        update sd_devices
        set eq_status = #{eqStatus}, eq_status_time = #{eqStatusTime}
        where f_eq_id = #{fEqId}
    </update>

    <!--    <update id="updateSdDevicesBatch">-->
<!--        <foreach collection="list" item="item" index="index" open="" close="" separator=",">-->
<!--            update sd_devices-->
<!--            set eq_status = #{item.eqStatus}-->
<!--            where eq_id = #{item.eqId}-->
<!--        </foreach>-->
<!--    </update>-->


    <delete id="deleteSdDevicesById" parameterType="String">
        delete from sd_devices where eq_id = #{eqId}
    </delete>

    <delete id="deleteSdDevicesByIds" parameterType="String">
        delete from sd_devices where eq_id in
        <foreach item="eqId" collection="array" open="(" separator="," close=")">
            #{eqId}
        </foreach>
    </delete>

    <!-- 通过隧道id查询设备类型 -->
    <select id="selectSdDevicesByTunnelId" parameterType="SdDevices" resultMap="SdDevicesResult">
        SELECT DISTINCT b.type_name, a.eq_type, a.eq_tunnel_id, a.eq_Name
        FROM sd_devices a
        LEFT JOIN sd_equipment_type b ON a.eq_type = b.type_id
        <where>
            <if test="eqTunnelId != null ">and a.eq_tunnel_id = #{eqTunnelId}</if>
            <if test="eqType != null ">and a.eq_type = #{eqType}</if>
        </where>
    </select>

    <!-- 查询每种设备类型对应的数量 -->
    <select id="selectTypeNameCount" resultType="int" >
        SELECT COUNT(1) FROM sd_devices a
        LEFT JOIN sd_equipment_type b ON a.eq_type = b.type_id
        <where>
            <if test="eqTunnelId != null ">and a.eq_tunnel_id = #{eqTunnelId}</if>
            <if test="eqType != null ">and a.eq_type = #{eqType}</if>
        </where>
    </select>


    <!-- 根据设备类型查询设备列表 -->
    <select id="selectEqListByEqTypes" resultMap="SdDevicesResult">
        <include refid="selectSdDevicesVo"/>
         WHERE eq_type in
        <foreach collection="array" item="eqTypes" index="index" open="(" separator="," close=")">
            #{eqTypes}
        </foreach>
    </select>

    <select id="selectSensorList" resultMap="SdDevicesResult">
        select a.eq_id, a.eq_type, b.type_name, a.eq_tunnel_id, c.tunnel_name
        from sd_devices a
                 LEFT JOIN sd_equipment_type b ON a.eq_type = b.type_id
                 LEFT JOIN sd_tunnels c ON a.eq_tunnel_id = c.tunnel_id
        where a.eq_type in (5,6,14,15,16,20)
    </select>

    <select id="selectSensorListByTunnelId" resultMap="SdDevicesResult">
        select a.eq_id, a.eq_name, a.pile, a.eq_type, a.eq_direction ,b.type_name, a.eq_tunnel_id, c.tunnel_name
        from sd_devices a
        LEFT JOIN sd_equipment_type b ON a.eq_type = b.type_id
        LEFT JOIN sd_tunnels c ON a.eq_tunnel_id = c.tunnel_id
        <where>
            a.eq_type in (5,6,14,13,15,16,20)
            <if test="eqTunnelId != null ">and a.eq_tunnel_id = #{eqTunnelId}</if>
            <if test="direction != null ">and a.eq_direction = #{direction}</if>
        </where>
    </select>

    <select id="selectRippleListByTunnelId" resultMap="SdDevicesResult">
        select a.eq_id, a.eq_type, a.eq_direction ,b.type_name, a.eq_tunnel_id, c.tunnel_name
        from sd_devices a
        LEFT JOIN sd_equipment_type b ON a.eq_type = b.type_id
        LEFT JOIN sd_tunnels c ON a.eq_tunnel_id = c.tunnel_id
        <where>
            a.eq_type in (108)
            <if test="eqTunnelId != null ">and a.eq_tunnel_id = #{eqTunnelId}</if>
            <if test="direction != null ">and a.eq_direction = #{direction}</if>
        </where>
    </select>

    <select id="getAllPressureGaugesMsg" resultMap="SdDevicesResult">
        select a.* from sd_devices a
                            left join sd_tunnels b on b.tunnel_id = a.eq_tunnel_id
        where eq_type = 111
    </select>

    <select id="getDevicesStatus" resultType="hashmap">
        SELECT a.eq_type,b.type_name,count(case when a.device_state=0 then 0 end) as offlineOfToday,
        count(case when a.eq_status=1 then 1 end) as onlineOfToday
        from sd_devices a
        left join sd_equipment_type b on a.eq_type = b.type_id
        where 1=1
        <if test="tunnelId != null ">and a.eq_tunnel_id = #{tunnelId}</if>
        GROUP BY eq_type
    </select>

    <select id="getDevicesType" resultType="hashmap">
        SELECT a.eq_type,b.type_name from sd_devices a
        left join sd_equipment_type b on a.eq_type = b.type_id
        <where>
            <if test="tunnelId != null ">and a.eq_tunnel_id = #{tunnelId}</if>
        </where>
        GROUP BY a.eq_type
    </select>
    <select id="selectID" resultType="java.lang.String">
        select eq_id from sd_devices where eq_id like CONCAT(#{ss},'%')
    </select>
    <select id="selectList" resultType="com.tunnel.business.domain.dataInfo.SdEquipmentType">
        select * from sd_equipment_type
    </select>
    <select id="selectCarFingerById" resultMap="SdDevicesResult">
        select * from sd_devices
        where eq_type = 1
        <if test="eqTunnelId != null">and eq_tunnel_id = #{eqTunnelId}</if>
        <if test="lane != null">and lane = #{lane} </if>
        <if test="eqDirection != null">and eq_direction = #{eqDirection} </if>
    </select>

    <select id="selectIsControlSdDevicesList" parameterType="SdDevices" resultMap="SdDevicesResult">
        select a.eq_id, a.f_eq_id,c.tunnel_id,c.tunnel_name, a.eq_name, a.eq_type,d.type_name, a.eq_model, a.brand_id,a.eq_tunnel_id,
        a.eq_direction,
        a.lane, a.pile, a.pile_num, a.lat, a.lng,a.ip, a.port, a.secure_key, a.eq_user, a.eq_pwd, a.comm_protocol,
        a.delivery_time, a.warranty_end_time, a.install_time, a.use_life, a.use_status,a.is_monitor,
        a.port_status, a.port_status_time, a.gateway_netstatus, a.gateway_netstatus_time, a.eq_status, a.eq_status_time,
        a.control_point_address, a.query_point_address, a.create_by,
        a.create_time, a.update_by, a.update_time, a.remark ,e.dept_name,c.dept_id,IFNULL(c.tunnel_address,'未配置') tunnel_address
        ,c.tunnel_name
        from sd_devices a
        left join sd_tunnels c on a.eq_tunnel_id = c.tunnel_id
        left join sd_equipment_type d on a.eq_type = d.type_id
        left join sys_dept e on e.dept_id = c.dept_id
        where  d.is_control = 1

            <if test="fEqId != null and fEqId != ''">
                and a.f_eq_id = #{fEqId}
            </if>
            <if test="eqTunnelId != null ">and a.eq_tunnel_id = #{eqTunnelId}</if>
            <if test="eqName != null  and eqName != ''">and a.eq_name like concat('%', #{eqName}, '%')</if>
            <if test="eqType != null ">and a.eq_type = #{eqType}</if>
            <if test="lane != null  and lane != ''">and a.lane = #{lane}</if>
            <if test="eqStatus != null  and eqStatus != ''">and a.eq_status = #{eqStatus}</if>
            <if test="isMonitor != null ">and a.is_monitor = #{isMonitor}</if>
            <if test="eqDirection != null  and eqDirection != ''">and a.eq_direction = #{eqDirection}</if>
            <if test="commProtocol != null and commProtocol !=''">
                and a.comm_protocol = #{commProtocol}
            </if>
            <if test="deptId != null ">
                AND (c.dept_id = #{deptId} OR c.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{deptId},d.ancestors) ))
            </if>
            ${params.dataScope}
        GROUP BY a.eq_name
    </select>

    <select id="selectDeviceByTidEqtp" resultMap="SdDevicesResult">
        select eq_id,eq_type,ip,eq_tunnel_id,eq_status
        from sd_devices
        where eq_tunnel_id=#{tunnelId}
        and eq_type in (#{lidarType},#{cameraType})
        and ip in
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item.ip}
        </foreach>
    </select>

    <select id="selecTunnelId" resultType="java.lang.String">
        select eq_tunnel_id tunnelId
        from sd_devices
        where eq_id=#{deviceId}
    </select>

    <select id="selectDevice" resultMap="SdDevicesResult">
        select eq_id,eq_type,eq_name,eq_status,lng,lat,eq_direction,pile,remark,ip
        from sd_devices
        where eq_tunnel_id =#{tunnelId}
        and eq_type in (1,10,5,18,7,17,19,31,16,23,26)
    </select>

    <select id="selectDeviceByHost" resultType="String">
        select a.eq_id from sd_firefighting_components_address a
        where host = #{host} and eq_loop = #{loop} and address = #{address}
    </select>

    <select id="selectDeviceByHost" resultType="String">
        select a.eq_id from sd_firefighting_components_address a
        where host = #{host} and eq_id = #{eqId}
    </select>

    <select id="getDevicesByTypeAndTunnel" parameterType="SdDevices" resultType="hashmap">
        select a.eq_id as eqId, a.eq_tunnel_id as eqTunnelId, a.eq_name as eqName, a.eq_type as eqType,
              a.pile
        from sd_devices a
        left join sd_equipment_type b on a.eq_type = b.type_id
        <where>
            <if test="eqTunnelId != null and eqTunnelId != ''">and a.eq_tunnel_id = #{eqTunnelId}</if>
            <if test="eqType != null ">and a.eq_type = #{eqType}</if>
        </where>
        order by a.create_time desc, a.update_time desc
    </select>

    <select id="selectEqStatus" resultType="java.lang.String">
       select eq_status deviceStatus from sd_devices
        where eq_id=#{deviceId}
    </select>

    <select id="selectDataUnit" resultType="com.tunnel.business.domain.digitalmodel.SdDeviceDataItem">
        select
        sdd.data data,
        sdt.unit unit,
        sdd.device_id deviceId
        from sd_device_data sdd
        left join sd_device_type_item sdt on
        sdd.item_id=sdt.id
        where device_id=#{eqId}
    </select>

    <select id="selectFireComponentsList" parameterType="SdDevices" resultMap="SdDevicesResult">
        select * from sd_devices where f_eq_id = #{fEqId}
    </select>

    <select id="selectDeviceDataAndUnit" resultType="hashmap">
        select sdd.data data, sdt.unit unit, sdd.device_id deviceId, sdt.id itemId
        from sd_device_data sdd
        left join sd_device_type_item sdt on sdd.item_id=sdt.id
        where device_id=#{eqId}
    </select>

    <select id="selectDeviceDataAndState" resultType="hashmap">
        SELECT
            A.id,
            A.device_id deviceId,
            A.item_id iteamId,
            A.`data` state,
            C.eq_type typeId,
            C.lane lane,
            C.eq_direction direction
        FROM
        sd_device_data A
        LEFT JOIN sd_device_type_item B ON B.id = A.item_id
        LEFT JOIN sd_devices C ON A.device_id = C.eq_id AND B.device_type_id = C.eq_type
        WHERE
            C.eq_type = 1 and C.eq_tunnel_id = #{tunnelId}
    </select>

    <select id="batchControlCarFinger" parameterType="SdDevices" resultMap="SdDevicesResult">
        select * from sd_devices a
        <where>
            <if test="eqTunnelId != null ">and a.eq_tunnel_id = #{eqTunnelId}</if>
            <if test="eqType != null ">and a.eq_type = #{eqType}</if>
            <if test="lane != null  and lane != ''">and a.lane = #{lane}</if>
            <if test="eqDirection != null  and eqDirection != ''">and a.eq_direction = #{eqDirection}</if>
        </where>
    </select>

    <select id="getReserveProcessDevices" parameterType="String" resultType="Map">
        select a.eq_id,a.eq_name,a.pile,a.pile_num,a.eq_status from sd_devices a where a.eq_id in
        <foreach collection="array" separator="," index="index" item="item" open="(" close=")">
            #{item}
        </foreach>
    </select>

    <select id="getDevicesListByFEqId" parameterType="String" resultMap="SdDevicesResult">
        <include refid="selectSdDevicesVo"/>
        where f_eq_id = #{fEqId}
    </select>


    <select id="getEquipmentInfo" parameterType="String" resultType="hashmap">
        SELECT concat(c.dict_label,t.pile) pile,s.state_name runStatus,e.device_state eqStatus
        FROM `sd_device_type_item` i
        left join sd_device_data d on i.id = d.item_id
        left join sd_devices t on t.eq_id = d.device_id
        left join sys_dict_data c on t.eq_direction = c.dict_value and c.dict_type= 'sd_direction'
        left join sd_equipment_state s on s.state_type_id = i.device_type_id and s.device_state = d.data and s.state_type = '2'
        left join sd_equipment_state e on e.state_type_id = i.device_type_id and e.device_state = d.data and e.state_type = '1'
        <where>
            <if test="eqId != null ">and t.eq_id = #{eqId}</if>
        </where>
    </select>


    <select id="getDevicesList" resultType="hashmap">
        select d.eq_id,d.eq_type,t.type_name,d.eq_name,d.eq_direction,d.pile,s.dict_label,u.tunnel_id,u.tunnel_name from  sd_devices d
        left join sd_equipment_type t on t.type_id = d.eq_type
        left join sys_dict_data s on d.eq_direction = s.dict_value
        left join sd_tunnels u on d.eq_tunnel_id = u.tunnel_id
        <where>
        and s.dict_type= 'sd_direction'
            <if test="tunnelId != null and tunnelId != ''">and d.eq_tunnel_id = #{tunnelId}</if>
            <if test="deviceType != null and deviceType != ''">and t.eq_system = #{deviceType}</if>
        </where>
    </select>

    <select id="getDevicesFireMarkList" parameterType="SdDevices" resultType="java.lang.String">
        select a.query_point_address from sd_devices a
        where a.eq_type = #{eqType} and a.eq_direction = #{eqDirection} and a.eq_tunnel_id = #{eqTunnelId}
          and a.query_point_address is not null
        GROUP BY a.query_point_address
    </select>

    <select id="batchGetDevicesList" parameterType="SdDevices" resultMap="SdDevicesResult">
        select d.eq_id,d.eq_name,d.pile,s.dict_label eq_direction from  sd_devices d
        left join sys_dict_data s on d.eq_direction = s.dict_value
        <where>
            and s.dict_type= 'sd_direction'
            and d.eq_id in
            <foreach collection="array" separator="," index="index" item="item" open="(" close=")">
                #{item}
            </foreach>
        </where>
    </select>

    <select id="getEquipmentType" parameterType="java.lang.String" resultType="hashmap">
        SELECT
            et.type_id AS eqTypeCode,
            et.type_name AS eqTypeName,
            COUNT(*) AS eqCount,
            IFNULL( onli.onlines, 0 ) AS eqOnlineNum,
            (
            IFNULL( onli.onlines, 0 )/ count(*)) AS eqOnlineRate,
            IFNULL(( 1- ( faul.eqFaultDay / ( count(*) * 365 ))), 1 ) AS eqUsability
        FROM
            sd_devices d
        LEFT JOIN sd_equipment_type et ON d.eq_type = et.type_id
        LEFT JOIN (
            SELECT
                eq_type, count(*) AS onlines
            FROM sd_devices
            WHERE
                eq_status = #{eqStatus}
            <if test="tunnelId != null and tunnelId != ''">
                AND eq_tunnel_id = #{tunnelId}
            </if>
            GROUP BY eq_type
        ) onli ON d.eq_type = onli.eq_type
        LEFT JOIN (
            SELECT
                d.eq_type AS eqType,
                (
                count(*) * DATEDIFF(
                DATE_FORMAT( NOW(), '%Y-%m-%d' ),
                DATE_FORMAT( MIN( sfl.fault_fxtime ), '%Y-%m-%d' ))) AS eqFaultDay
            FROM
                sd_fault_list sfl
            LEFT JOIN sd_devices d ON sfl.eq_id = d.eq_id
            WHERE
                1 = 1
            AND sfl.fault_status = #{faultStatus}
            AND sfl.fallt_remove_statue = #{falltRemoveStatue}
            <if test="tunnelId != null and tunnelId != ''">
                AND sfl.tunnel_id = #{tunnelId}
            </if>
            GROUP BY
            sfl.eq_id,
            d.eq_type
        ) faul ON d.eq_type = faul.eqType
        WHERE
        1 = 1
        <if test="tunnelId != null and tunnelId != ''">
            AND d.eq_tunnel_id = #{tunnelId}
        </if>
        GROUP BY
        et.type_id
    </select>

    <select id="getDevBrandList" resultType="com.tunnel.business.domain.dataInfo.SdDevicesBrand">
        select * from sd_devices_brand
    </select>


    <select id="getAppDevicesList" parameterType="SdDevices" resultMap="SdDevicesResult">
        select t.eq_name,t.pile,u.tunnel_name eq_tunnel_id from sd_devices t
        left join sd_device_data d on t.eq_id = d.device_id
        left join  sd_device_type_item i on i.id = d.item_id
        left join sd_equipment_state s on s.state_type_id = i.device_type_id and s.device_state = d.data and s.state_type = '1'
        left join sd_tunnels u on u.tunnel_id = t.eq_tunnel_id
        <where>
        1=1
            <if test="param != null and param != ''">and CONCAT(t.eq_name,t.pile) like CONCAT('%',#{param},'%') </if>
            <if test="eqType != null and eqType != ''">and t.eq_type = #{eqType}</if>
            <if test="eqStatus != null and eqStatus != ''">and d.data = #{eqStatus}</if>

        </where>
    </select>


    <select id="getDevicesNum" parameterType="SdDevices" resultMap="SdDevicesResult">
        select count(if(d.data='1',1,null)) zxNum,count(if(d.data='2',1,null)) lxNum from sd_device_data d
        left join  sd_device_type_item i on i.id = d.item_id
        left join sd_devices t on t.eq_id = d.device_id
        left join sd_equipment_state s on s.state_type_id = i.device_type_id and s.device_state = d.data and s.state_type = '1'
        <where>
            <if test="param != null and param != ''">and CONCAT(t.eq_name,t.pile) like CONCAT('%',#{param},'%') </if>
            <if test="eqType != null and eqType != ''">and t.eq_type = #{eqType}</if>
            <if test="eqStatus != null and eqStatus != ''">and d.data = #{eqStatus}</if>

        </where>
    </select>


    <select id="getAppDevicesInfo" parameterType="SdDevices" resultMap="SdDevicesResult">
        select d.eq_name,t.type_name,eq_id,u.tunnel_name,c.dict_label eq_direction,d.pile,d.install_time
        from sd_devices d
        left join sd_equipment_type t on d.eq_type = t.type_id
        left join sd_tunnels u on d.eq_tunnel_id = u.tunnel_id
        left join sys_dict_data c on c. dict_value = d.eq_direction and  c.dict_type = 'sd_direction_list'
        where d.eq_id = #{eqId}
    </select>




    <select id="getAppDevicesStatus" parameterType="SdDevices" resultMap="SdDevicesResult">
        SELECT t.eq_id,i.item_name,i.item_code,d.data,s.state_name runStatus,e.state_name eqStatus
        FROM `sd_device_type_item` i
        left join sd_device_data d on i.id = d.item_id
        left join sd_devices t on t.eq_id = d.device_id
        left join sd_equipment_state s on s.state_type_id = i.device_type_id and s.device_state = d.data and s.state_type = '2'
        left join sd_equipment_state e on e.state_type_id = i.device_type_id and e.device_state = d.data and e.state_type = '1'
        where 1=1
        and t.eq_id = #{eqId}
    </select>

    <select id="selectSdDevicesListByEqTypes" resultMap="SdDevicesResult">
        select a.eq_id, a.f_eq_id, a.eq_tunnel_id,c.tunnel_name, a.eq_name, a.eq_type,d.type_name, a.eq_model, a.brand_id,
        a.eq_direction,
        a.lane, a.pile, a.pile_num, a.lat, a.lng,a.ip, a.port, a.secure_key, a.eq_user, a.eq_pwd, a.comm_protocol,
        a.delivery_time, a.warranty_end_time, a.install_time, a.use_life, a.use_status,a.is_monitor,
        a.port_status, a.port_status_time, a.gateway_netstatus, a.gateway_netstatus_time, a.eq_status, a.eq_status_time,
        a.control_point_address, a.query_point_address, a.create_by,
        a.create_time, a.update_by, a.update_time, a.remark ,e.dept_name,c.dept_id,IFNULL(c.tunnel_address,'未配置') tunnel_address
        ,c.tunnel_name
        from sd_devices a
        left join sd_tunnels c on a.eq_tunnel_id = c.tunnel_id
        left join sd_equipment_type d on a.eq_type = d.type_id
        left join sys_dept e on e.dept_id = c.dept_id
        where a.eq_type = #{guidanceLampTypeId} or a.eq_type = #{lunKuoBiaoTypeId}
    </select>

</mapper>

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tunnel.business.mapper.dataInfo.SdMicrowavePeriodicStatisticsMapper">
    
    <resultMap type="SdMicrowavePeriodicStatistics" id="SdMicrowavePeriodicStatisticsResult">
        <result property="statisticsId"    column="statistics_id"    />
        <result property="tunnelId"    column="tunnel_id"    />
        <result property="deviceId"    column="device_id"    />
        <result property="laneNo"    column="lane_no"    />
        <result property="avgSpeed"    column="avg_speed"    />
        <result property="smallVehicleNum"    column="small_vehicle_num"    />
        <result property="midVehicleNum"    column="mid_vehicle_num"    />
        <result property="heavyVehicleNum"    column="heavy_vehicle_num"    />
        <result property="avgLength"    column="avg_length"    />
        <result property="avgHeadway"    column="avg_headway"    />
        <result property="avgOccupancy"    column="avg_occupancy"    />
        <result property="flag"    column="flag"    />
        <result property="trafficFlowTotal"    column="traffic_flow_total"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="eqDirection"    column="eq_direction"    />
        <result property="smallVehicleSpeed"    column="small_vehicle_speed"    />
        <result property="midVehicleSpeed"    column="mid_vehicle_speed"    />
        <result property="heavyVehicleSpeed"    column="heavy_vehicle_speed"    />
        <result property="vehicleSpeedReserve5"    column="vehicle_speed_reserve5"    />
    </resultMap>

    <sql id="selectSdMicrowavePeriodicStatisticsVo">
        select statistics_id, tunnel_id, device_id, lane_no, avg_speed, small_vehicle_num, mid_vehicle_num, heavy_vehicle_num, avg_length, avg_headway, avg_occupancy, flag, traffic_flow_total, create_by, create_time, eq_direction, small_vehicle_speed, mid_vehicle_speed, heavy_vehicle_speed from sd_microwave_periodic_statistics
    </sql>

    <select id="selectSdMicrowavePeriodicStatisticsList" parameterType="SdMicrowavePeriodicStatistics" resultMap="SdMicrowavePeriodicStatisticsResult">
        <include refid="selectSdMicrowavePeriodicStatisticsVo"/>
        <where>  
            <if test="tunnelId != null  and tunnelId != ''"> and tunnel_id = #{tunnelId}</if>
            <if test="deviceId != null  and deviceId != ''"> and device_id = #{deviceId}</if>
            <if test="laneNo != null  and laneNo != ''"> and lane_no = #{laneNo}</if>
            <if test="avgSpeed != null  and avgSpeed != ''"> and avg_speed = #{avgSpeed}</if>
            <if test="smallVehicleNum != null  and smallVehicleNum != ''"> and small_vehicle_num = #{smallVehicleNum}</if>
            <if test="midVehicleNum != null  and midVehicleNum != ''"> and mid_vehicle_num = #{midVehicleNum}</if>
            <if test="heavyVehicleNum != null  and heavyVehicleNum != ''"> and heavy_vehicle_num = #{heavyVehicleNum}</if>
            <if test="avgLength != null  and avgLength != ''"> and avg_length = #{avgLength}</if>
            <if test="avgHeadway != null  and avgHeadway != ''"> and avg_headway = #{avgHeadway}</if>
            <if test="avgOccupancy != null  and avgOccupancy != ''"> and avg_occupancy = #{avgOccupancy}</if>
            <if test="flag != null  and flag != ''"> and flag = #{flag}</if>
            <if test="trafficFlowTotal != null  and trafficFlowTotal != ''"> and traffic_flow_total = #{trafficFlowTotal}</if>
            <if test="eqDirection != null  and eqDirection != ''"> and eq_direction = #{eqDirection}</if>
            <if test="smallVehicleSpeed != null  and smallVehicleSpeed != ''"> and small_vehicle_speed = #{smallVehicleSpeed}</if>
            <if test="midVehicleSpeed != null  and midVehicleSpeed != ''"> and mid_vehicle_speed = #{midVehicleSpeed}</if>
            <if test="heavyVehicleSpeed != null  and heavyVehicleSpeed != ''"> and heavy_vehicle_speed = #{heavyVehicleSpeed}</if>
        </where>
    </select>
    
    <select id="selectSdMicrowavePeriodicStatisticsByStatisticsId" parameterType="Long" resultMap="SdMicrowavePeriodicStatisticsResult">
        <include refid="selectSdMicrowavePeriodicStatisticsVo"/>
        where statistics_id = #{statisticsId}
    </select>
        
    <insert id="insertSdMicrowavePeriodicStatistics" parameterType="SdMicrowavePeriodicStatistics" useGeneratedKeys="true" keyProperty="statisticsId">
        insert into sd_microwave_periodic_statistics
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tunnelId != null">tunnel_id,</if>
            <if test="deviceId != null">device_id,</if>
            <if test="laneNo != null">lane_no,</if>
            <if test="avgSpeed != null">avg_speed,</if>
            <if test="smallVehicleNum != null">small_vehicle_num,</if>
            <if test="midVehicleNum != null">mid_vehicle_num,</if>
            <if test="heavyVehicleNum != null">heavy_vehicle_num,</if>
            <if test="avgLength != null">avg_length,</if>
            <if test="avgHeadway != null">avg_headway,</if>
            <if test="avgOccupancy != null">avg_occupancy,</if>
            <if test="flag != null">flag,</if>
            <if test="trafficFlowTotal != null">traffic_flow_total,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="eqDirection != null">eq_direction,</if>
            <if test="smallVehicleSpeed != null">small_vehicle_speed,</if>
            <if test="midVehicleSpeed != null">mid_vehicle_speed,</if>
            <if test="heavyVehicleSpeed != null">heavy_vehicle_speed,</if>
            <if test="vehicleSpeedReserve5 != null">vehicle_speed_reserve5,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="tunnelId != null">#{tunnelId},</if>
            <if test="deviceId != null">#{deviceId},</if>
            <if test="laneNo != null">#{laneNo},</if>
            <if test="avgSpeed != null">#{avgSpeed},</if>
            <if test="smallVehicleNum != null">#{smallVehicleNum},</if>
            <if test="midVehicleNum != null">#{midVehicleNum},</if>
            <if test="heavyVehicleNum != null">#{heavyVehicleNum},</if>
            <if test="avgLength != null">#{avgLength},</if>
            <if test="avgHeadway != null">#{avgHeadway},</if>
            <if test="avgOccupancy != null">#{avgOccupancy},</if>
            <if test="flag != null">#{flag},</if>
            <if test="trafficFlowTotal != null">#{trafficFlowTotal},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="eqDirection != null">#{eqDirection},</if>
            <if test="smallVehicleSpeed != null">#{smallVehicleSpeed},</if>
            <if test="midVehicleSpeed != null">#{midVehicleSpeed},</if>
            <if test="heavyVehicleSpeed != null">#{heavyVehicleSpeed},</if>
            <if test="vehicleSpeedReserve5 != null">#{vehicleSpeedReserve5},</if>
         </trim>
    </insert>

    <update id="updateSdMicrowavePeriodicStatistics" parameterType="SdMicrowavePeriodicStatistics">
        update sd_microwave_periodic_statistics
        <trim prefix="SET" suffixOverrides=",">
            <if test="tunnelId != null">tunnel_id = #{tunnelId},</if>
            <if test="deviceId != null">device_id = #{deviceId},</if>
            <if test="laneNo != null">lane_no = #{laneNo},</if>
            <if test="avgSpeed != null">avg_speed = #{avgSpeed},</if>
            <if test="smallVehicleNum != null">small_vehicle_num = #{smallVehicleNum},</if>
            <if test="midVehicleNum != null">mid_vehicle_num = #{midVehicleNum},</if>
            <if test="heavyVehicleNum != null">heavy_vehicle_num = #{heavyVehicleNum},</if>
            <if test="avgLength != null">avg_length = #{avgLength},</if>
            <if test="avgHeadway != null">avg_headway = #{avgHeadway},</if>
            <if test="avgOccupancy != null">avg_occupancy = #{avgOccupancy},</if>
            <if test="flag != null">flag = #{flag},</if>
            <if test="trafficFlowTotal != null">traffic_flow_total = #{trafficFlowTotal},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="eqDirection != null">eq_direction = #{eqDirection},</if>
            <if test="smallVehicleSpeed != null">small_vehicle_speed = #{smallVehicleSpeed},</if>
            <if test="midVehicleSpeed != null">mid_vehicle_speed = #{midVehicleSpeed},</if>
            <if test="heavyVehicleSpeed != null">heavy_vehicle_speed = #{heavyVehicleSpeed},</if>
        </trim>
        where statistics_id = #{statisticsId}
    </update>

    <delete id="deleteSdMicrowavePeriodicStatisticsByStatisticsId" parameterType="Long">
        delete from sd_microwave_periodic_statistics where statistics_id = #{statisticsId}
    </delete>

    <delete id="deleteSdMicrowavePeriodicStatisticsByStatisticsIds" parameterType="String">
        delete from sd_microwave_periodic_statistics where statistics_id in 
        <foreach item="statisticsId" collection="array" open="(" separator="," close=")">
            #{statisticsId}
        </foreach>
    </delete>

    <select id="getStatisticsNewList" parameterType="sdMicrowavePeriodicStatistics" resultType="sdMicrowavePeriodicStatistics">
        SELECT
            mps.statistics_id AS statisticsId,
            mps.lane_no AS laneNo,
            mps.traffic_flow_total AS trafficFlowTotal,
            mps.avg_speed AS avgSpeed,
            mps.avg_occupancy AS avgOccupancy,
            mps.create_time AS createTime
        FROM
            sd_microwave_periodic_statistics mps
        WHERE
            1 = 1
          AND mps.eq_direction = #{eqDirection}
          AND mps.lane_no = #{laneNo}
          AND mps.device_id = #{deviceId}
        ORDER BY mps.create_time DESC
        LIMIT 1
    </select>

    <select id="getStatisticsRealList" parameterType="sdMicrowavePeriodicStatistics" resultType="hashmap">
        SELECT HOUR
            ( t.TIME ) order_hour,
            CASE
              WHEN (sa.avgSpeed IS NULL or sa.avgSpeed = '')
            THEN 0
            ELSE
                ROUND((sa.avgSpeed / sa.countNum),2)
            END avgSpeed
        FROM
            (
            SELECT
                DATE_FORMAT( DATE_SUB( now(), INTERVAL ( -( @i := @i - 1 ) ) HOUR ), '%Y-%m-%d %H' ) AS 'time'
            FROM
            (
                SELECT
                    a
                FROM
                ( SELECT '1' AS a UNION SELECT '2' UNION SELECT '3' UNION SELECT '4' ) AS a
                    JOIN ( SELECT '1' UNION SELECT '2' UNION SELECT '3' UNION SELECT '4' UNION SELECT '5' UNION SELECT '6' ) AS b ON 1
                ) AS b,(
                    SELECT
                    @i :=+ 1
                ) AS i
            ) AS t
            LEFT JOIN (
                SELECT
                    DATE_FORMAT( DATE_SUB( b.create_time, INTERVAL MINUTE ( now() )- 60 MINUTE ), '%Y-%m-%d %H' ) AS DATE,
                    avg_speed AS avgSpeed,
                    countNum AS countNum
                FROM
                    ( SELECT
                          sum( mps.avg_speed ) AS avg_speed,
                          count(DATE_FORMAT( mps.create_time, '%Y-%m-%d %H' )) AS countNum,
                          mps.create_time
                      FROM sd_microwave_periodic_statistics mps WHERE mps.create_time >= ( now() - INTERVAL 25 HOUR )
                        AND mps.lane_no = #{laneNo}
                        AND mps.device_id = #{deviceId}
                        AND mps.eq_direction = #{eqDirection}
                        GROUP BY
                        DATE_FORMAT( mps.create_time, '%Y-%m-%d %H' )) b
                GROUP BY
                DATE
                ) AS sa ON sa.DATE = DATE_FORMAT(
            t.TIME,
            '%Y-%m-%d %H'
            )
        GROUP BY t.TIME
    </select>

    <select id="selectCatHistory" resultType="hashmap">
        SELECT
            a.tunnel_id tunnelId,
            t.tunnel_name AS tunnelName,
            t.tunnel_station_name AS deptName,
            d.pile,
            sdd.dict_label AS direction,
            a.device_id deviceId,
            d.eq_id AS eqId,
            d.eq_name eqName,
            SUM( a.small_vehicle_num )+ SUM( a.mid_vehicle_num )+ SUM( a.heavy_vehicle_num ) AS DATA,
            DATE_FORMAT( a.create_time, '%Y-%m-%d %H:%i' ) createTime
        FROM
            sd_microwave_periodic_statistics a
        LEFT JOIN sd_devices d ON a.device_id = d.eq_id
        LEFT JOIN sys_dict_data sdd ON d.eq_direction = sdd.dict_value
        LEFT JOIN sd_tunnels t ON a.tunnel_id = t.tunnel_id
        where 1=1
        AND sdd.dict_type = 'sd_direction'
        <if test="beginTime != null and beginTime != ''and endTime != null and endTime != ''"><!-- 开始时间检索 -->
              and a.create_time between date_format(#{beginTime},'%Y-%m-%d %H:%i:%s') and date_format(#{endTime},'%Y-%m-%d %H:%i:%s')
        </if>
        <if test="deviceId != null and deviceId != ''"> and a.device_id  = #{deviceId}</if>
        GROUP BY createTime
        ORDER BY a.create_time desc
    </select>

    <select id="selectCarNumber" resultType="hashmap">
        SELECT SUM(a.small_vehicle_num)+SUM(a.mid_vehicle_num)+SUM(a.heavy_vehicle_num)  as smallVehicleNum,a.eq_direction
        FROM sd_microwave_periodic_statistics a
        WHERE
        1 = 1
        AND a.device_id = #{deviceId}
        AND DATE_FORMAT( a.create_time, '%Y-%m-%d' ) = DATE_FORMAT( NOW(), '%Y-%m-%d' ) ;

    </select>
</mapper>
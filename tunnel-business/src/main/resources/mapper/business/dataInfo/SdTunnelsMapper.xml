<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tunnel.business.mapper.dataInfo.SdTunnelsMapper">

    <resultMap type="SdTunnels" id="SdTunnelsResult">
        <result property="tunnelId" column="tunnel_id"/>
        <result property="tunnelName" column="tunnel_name"/>
        <result property="tunnelCode" column="tunnel_code"/>
        <result property="tunnelAddress" column="tunnel_address"/>
        <result property="longitude" column="longitude"/>
        <result property="latitude" column="latitude"/>
        <result property="tunnelStationId" column="tunnel_station_id"/>
        <result property="tunnelStationName" column="tunnel_station_name"/>
        <result property="lane" column="lane"/>
        <result property="coordinates" column="coordinates"/>
        <result property="remake" column="remake"/>
        <result property="poll" column="poll"/>
        <result property="storeConfigure" column="store_configure"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="tunnelLength" column="tunnel_length"/>
        <result property="deptId" column="dept_id" />
        <result property="deptName" column="dept_name" />
        <result property="startPile" column="start_pile" />
        <result property="endPile" column="end_pile" />
        <result property="startPileNum" column="start_pile_num" />
        <result property="endPileNum" column="end_pile_num" />
        <result property="roadId" column="road_id" />
        <result property="roadCode" column="road_code" />
        <result property="roadName" column="road_name" />
        <result property="levelCode" column="level_code" />
        <result property="levelName" column="level_name" />
        <result property="lengthCode" column="length_code" />
        <result property="lengthName" column="length_name" />
        <result property="constructYear" column="construct_year" />
        <result property="activateTime" column="activate_time" />
        <result property="managerId" column="manager_id" />
        <result property="orgCode" column="org_code" />
        <result property="orgName" column="org_name" />
        <association property="percentage" column="tunnel_id" javaType="SdSafetyIndex" resultMap="indexResult"/>
        <collection property="sdTunnelSubareas" ofType="sdTunnelSubarea" javaType="java.util.List" select="getSubareas" column="tunnel_id">
            <result property="sId" column="s_id" />
            <result property="sName" column="s_name" />
            <result property="tunnelId" column="tunnel_id" />
        </collection>
    </resultMap>

    <resultMap id="indexResult" type="SdSafetyIndex">
        <id property="tunnelId" column="tunnel_id"/>
        <result property="securityPercentage" column="security_percentage"/>
    </resultMap>

    <sql id="selectSdTunnelsVo">
        select tunnel_id, tunnel_name, tunnel_code, tunnel_address, longitude, latitude, tunnel_station_id,
               tunnel_station_name, lane, coordinates, remake, tunnel_length, poll, store_configure, create_by,
               create_time, update_by, update_time, dept_id,start_pile,end_pile,start_pile_num,end_pile_num,road_id,level_code,length_code,construct_year,
               manager_id,org_name,org_code,level_name,length_name,road_code,road_name ,activate_time from sd_tunnels
    </sql>

    <select id="selectSdTunnelsList" parameterType="SdTunnels" resultMap="SdTunnelsResult">
        select t.tunnel_id, t.tunnel_name, t.tunnel_code, t.tunnel_address, t.longitude, t.latitude, t.tunnel_station_id,
        t.tunnel_station_name, t.lane, t.coordinates, t.remake, t.tunnel_length, t.poll, t.store_configure, t.create_by,
        t.create_time, t.update_by, t.update_time, t.dept_id, d.dept_name,t.start_pile,t.end_pile,t.start_pile_num,t.end_pile_num,
        ifnull(i.security_percentage,'0') security_percentage, t.road_id
        from sd_tunnels t
        left join sys_dept d on t.dept_id = d.dept_id
        left join sd_safety_index i on i.tunnel_id = t.tunnel_id
        <where>
            1=1 and t.poll= 0
            <if test="tunnelName != null and tunnelName != ''">and t.tunnel_name like concat('%', #{tunnelName}, '%')
            </if>
            <if test="tunnelId != null and tunnelId != ''">and t.tunnel_id = #{tunnelId}
            </if>
            <if test="poll != null ">and t.poll = #{poll}</if>
            <if test="storeConfigure != null  and storeConfigure != ''">and t.store_configure = #{storeConfigure}</if>
            <if test="deptId != null and deptId != ''">
                AND (t.dept_id = #{deptId} OR t.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{deptId},d.ancestors) ))
            </if>
            ${params.dataScope}
        </where>
        order by t.order_num asc
    </select>

    <select id="selectSdTunnelsList1" parameterType="SdTunnels" resultMap="SdTunnelsResult">
        select t.tunnel_id, t.tunnel_name, t.tunnel_code, t.tunnel_address, t.longitude, t.latitude, t.tunnel_station_id,
        t.tunnel_station_name, t.lane, t.coordinates, t.remake, t.tunnel_length, t.poll, t.store_configure, t.create_by,
        t.create_time, t.update_by, t.update_time, t.dept_id, d.dept_name,t.start_pile,t.end_pile,t.start_pile_num,t.end_pile_num,
        ifnull(i.security_percentage,'0') security_percentage, t.road_id, t.road_code, t.road_name, t.level_code, t.level_name, t.length_code,
        t.length_name, t.construct_year, t.activate_time, t.manager_id, t.org_code, t.org_name
        from sd_tunnels t
        left join sys_dept d on t.dept_id = d.dept_id
        left join sd_safety_index i on i.tunnel_id = t.tunnel_id
        <where>
            <if test="tunnelName != null and tunnelName != ''">and t.tunnel_name like concat('%', #{tunnelName}, '%')
            </if>
            <if test="tunnelId != null and tunnelId != ''">and t.tunnel_id = #{tunnelId}
            </if>
            <if test="poll != null ">and t.poll = #{poll}</if>
            <if test="storeConfigure != null  and storeConfigure != ''">and t.store_configure = #{storeConfigure}</if>
            <if test="searchValue != null  and searchValue != ''">and CONCAT(t.tunnel_name,t.start_pile,t.end_pile) LIKE CONCAT('%',#{searchValue},'%')</if>
            <if test="deptId != null and deptId != ''">
                AND (t.dept_id = #{deptId} OR t.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{deptId},d.ancestors) ))
            </if>
            <if test="ids != null and ids != ''"> and FIND_IN_SET(t.tunnel_id,#{ids}) > 0</if>
            ${params.dataScope}
        </where>
        order by t.order_num asc
    </select>

    <select id="selectTunnelsList" parameterType="SdTunnels" resultMap="SdTunnelsResult">
        select * from sd_tunnels t
        <where>
            <if test="deptId != null and deptId != ''">
                AND (t.dept_id = #{deptId} OR t.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{deptId},d.ancestors) ))
            </if>
        </where>
    </select>
    <select id="selectTunnelsDeptIdList" parameterType="SdTunnels" resultMap="SdTunnelsResult">
        select t.tunnel_id , t.tunnel_name, t.longitude, t.latitude, t.start_pile from sd_tunnels t
        <where>
            AND t.poll = 0
            <if test="tunnelId != null and tunnelId != ''">and t.tunnel_id = #{tunnelId}
            </if>
            <if test="deptId != null and deptId != ''">
                AND (t.dept_id = #{deptId} OR t.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{deptId},d.ancestors) ))
            </if>
        </where>
    </select>

    <select id="selectTunList" parameterType="SdTunnels" resultMap="SdTunnelsResult">
        select t.tunnel_id , t.tunnel_name, t.longitude, t.latitude, t.start_pile from sd_tunnels t
        <where>
            AND t.poll = 0
            <if test="tunnelId != null and tunnelId != ''">and t.tunnel_id = #{tunnelId}
            </if>
            <if test="deptId != null and deptId != ''">
                AND (t.dept_id = #{deptId} OR t.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{deptId},d.ancestors) ))
            </if>
        </where>
    </select>


    <select id="verifyTunnelOnly" parameterType="SdTunnels" resultMap="SdTunnelsResult">
        select t.tunnel_id, t.tunnel_name, t.tunnel_code, t.tunnel_address, t.longitude, t.latitude, t.tunnel_station_id,
        t.tunnel_station_name, t.lane, t.coordinates, t.remake, t.tunnel_length, t.poll, t.store_configure, t.create_by,
        t.create_time, t.update_by, t.update_time, t.dept_id, d.dept_name, ifnull(i.security_percentage,'0') security_percentage
        from sd_tunnels t
        left join sys_dept d on t.dept_id = d.dept_id
        left join sd_safety_index i on i.tunnel_id = t.tunnel_id
        <where>
            <if test="tunnelName != null and tunnelName != ''">and t.tunnel_name = #{tunnelName}
            </if>
            <if test="tunnelId != null and tunnelId != ''">and t.tunnel_id = #{tunnelId}
            </if>
            <if test="deptId != null ">
                AND (t.dept_id = #{deptId} OR t.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{deptId},d.ancestors) ))
            </if>
            ${params.dataScope}
        </where>
    </select>
    <select id="selectSdTunnelsById" parameterType="String" resultMap="SdTunnelsResult">
        <include refid="selectSdTunnelsVo"/>
        where tunnel_id = #{tunnelId}
    </select>

    <insert id="insertSdTunnels" parameterType="SdTunnels" useGeneratedKeys="true" keyProperty="tunnelId">
        insert into sd_tunnels
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tunnelId != null">tunnel_id,</if>
            <if test="tunnelName != null">tunnel_name,</if>
            <!-- <if test="tunnelCode != null">tunnel_code,</if> -->
            <if test="tunnelAddress != null">tunnel_address,</if>
            <if test="longitude != null">longitude,</if>
            <if test="latitude != null">latitude,</if>
            <if test="tunnelStationId != null">tunnel_station_id,</if>
            <if test="tunnelStationName != null">tunnel_station_name,</if>
            <if test="lane != null">lane,</if>
            <if test="coordinates != null">coordinates,</if>
            <if test="remake != null">remake,</if>
            <if test="poll != null">poll,</if>
            <if test="storeConfigure != null">store_configure,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="tunnelLength != null">tunnel_length,</if>
            <if test="deptId != null">dept_id,</if>
            <if test="startPile != null">start_pile,</if>
            <if test="endPile != null">end_pile,</if>
            <if test="startPileNum != null">start_pile_num,</if>
            <if test="endPileNum != null">end_pile_num,</if>
            <if test="roadId != null">road_id,</if>
            <if test="roadCode != null">road_code,</if>
            <if test="roadName != null">road_name,</if>
            <if test="levelName != null">level_name,</if>
            <if test="lengthName != null">length_Name,</if>
            <if test="activateTime != null">activate_time,</if>
            <if test="orgCode != null">org_code,</if>
            <if test="levelCode != null">level_code,</if>
            <if test="lengthCode != null">length_code,</if>
            <if test="constructYear != null">construct_year,</if>
            <if test="managerId != null">manager_id,</if>
            <if test="orgName != null">org_name</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="tunnelId != null">#{tunnelId},</if>
            <if test="tunnelName != null">#{tunnelName},</if>
            <!-- <if test="tunnelCode != null">#{tunnelCode},</if> -->
            <if test="tunnelAddress != null">#{tunnelAddress},</if>
            <if test="longitude != null">#{longitude},</if>
            <if test="latitude != null">#{latitude},</if>
            <if test="tunnelStationId != null">#{tunnelStationId},</if>
            <if test="tunnelStationName != null">#{tunnelStationName},</if>
            <if test="lane != null">#{lane},</if>
            <if test="coordinates != null">#{coordinates},</if>
            <if test="remake != null">#{remake},</if>
            <if test="poll != null">#{poll},</if>
            <if test="storeConfigure != null">#{storeConfigure},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="tunnelLength != null">#{tunnelLength},</if>
            <if test="deptId != null">#{deptId},</if>
            <if test="startPile != null">#{startPile},</if>
            <if test="endPile != null">#{endPile},</if>
            <if test="startPileNum != null">#{startPileNum},</if>
            <if test="endPileNum != null">#{endPileNum},</if>
            <if test="roadId != null">#{roadId},</if>
            <if test="roadCode != null">#{roadCode},</if>
            <if test="roadName != null">#{roadName},</if>
            <if test="levelName != null">#{levelName},</if>
            <if test="lengthName != null">#{lengthName},</if>
            <if test="activateTime != null">#{activateTime},</if>
            <if test="orgCode != null">#{orgCode},</if>
            <if test="levelCode != null">#{levelCode},</if>
            <if test="lengthCode != null">#{lengthCode},</if>
            <if test="constructYear != null">#{constructYear},</if>
            <if test="managerId != null">#{managerId},</if>
            <if test="orgName != null">#{orgName}</if>
        </trim>
    </insert>

    <update id="updateSdTunnels" parameterType="SdTunnels">
        update sd_tunnels
        <trim prefix="SET" suffixOverrides=",">
            <if test="tunnelName != null">tunnel_name = #{tunnelName},</if>
            <if test="tunnelCode != null">tunnel_code = #{tunnelCode},</if>
            <if test="tunnelAddress != null">tunnel_address = #{tunnelAddress},</if>
            <if test="longitude != null">longitude = #{longitude},</if>
            <if test="latitude != null">latitude = #{latitude},</if>
            <if test="tunnelStationId != null">tunnel_station_id = #{tunnelStationId},</if>
            <if test="tunnelStationName != null">tunnel_station_name = #{tunnelStationName},</if>
            <if test="lane != null">lane = #{lane},</if>
            <if test="coordinates != null">coordinates = #{coordinates},</if>
            <if test="remake != null">remake = #{remake},</if>
            <if test="poll != null">poll = #{poll},</if>
            <if test="storeConfigure != null">store_configure = #{storeConfigure},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="tunnelLength != null">tunnel_length = #{tunnelLength},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="startPile != null">start_pile = #{startPile},</if>
            <if test="endPile != null">end_pile = #{endPile},</if>
            <if test="startPileNum != null">start_pile_num = #{startPileNum},</if>
            <if test="endPileNum != null">end_pile_num = #{endPileNum},</if>
            <if test="roadId != null">road_id = #{roadId},</if>
            <if test="levelCode != null">level_code = #{levelCode},</if>
            <if test="lengthCode != null">length_code = #{lengthCode},</if>
            <if test="constructYear != null">construct_year = #{constructYear},</if>
            <if test="managerId != null">manager_id = #{managerId},</if>
            <if test="orgName != null">org_name = #{orgName},</if>
            <if test="orgCode != null">org_code = #{orgCode},</if>
            <if test="levelName != null">level_name = #{levelName},</if>
            <if test="lengthName != null">length_name = #{lengthName},</if>
            <if test="roadCode != null">road_code = #{roadCode},</if>
            <if test="roadName != null">road_name = #{roadName},</if>
            <if test="activateTime != null">activate_time = #{activateTime}</if>
        </trim>
        where tunnel_id = #{tunnelId}
    </update>

    <delete id="deleteSdTunnelsById" parameterType="String">
        delete from sd_tunnels where tunnel_id = #{tunnelId}
    </delete>

    <delete id="deleteSdTunnelsByIds" parameterType="String">
        delete from sd_tunnels where tunnel_id in
        <foreach item="tunnelId" collection="array" open="(" separator="," close=")">
            #{tunnelId}
        </foreach>
    </delete>

    <select id="selectSdTunnelsSubList" parameterType="SdTunnels" resultMap="SdTunnelsResult">
        select a.tunnel_id, a.tunnel_name, b.s_id, b.s_name from sd_tunnels a
        left join sd_tunnel_subarea b on a.tunnel_id = b.tunnel_id
        <where>
        1=1 and a.poll= '0'
            <if test="tunnelId != null and tunnelId != ''">and a.tunnel_id = #{tunnelId}</if>
            <if test="tunnelName != null">and a.tunnelName = #{tunnelName} </if>
        </where>
    </select>

    <select id="getSubareas" parameterType="java.lang.String" resultType="com.tunnel.business.domain.event.SdTunnelSubarea">
        select a.s_id, a.s_name, a.tunnel_id  from sd_tunnel_subarea a
        left join sd_tunnels b on a.tunnel_id = b.tunnel_id
        where a.tunnel_id = #{tunnel_id}
    </select>

    <select id="deptId" parameterType="Long" resultMap="SdTunnelsResult">
        select tunnel_id,
               tunnel_name,
               tunnel_code,
               tunnel_address,
               longitude,
               latitude,
               tunnel_station_id,
               tunnel_station_name,
               lane,
               coordinates,
               remake,
               tunnel_length,
               poll,
               store_configure,
               create_by,
               create_time,
               update_by,
               update_time,
               dept_id
        from sd_tunnels
        where dept_id = #{deptId}  and poll = '0'
    </select>


    <!--查询所有隧道列表-->
    <select id="getTunnelList" resultType="java.util.Map">
        select tunnel_id tunnelId,tunnel_name tunnelName
        from sd_tunnels
    </select>


    <select id="selectTunnelList" resultMap="SdTunnelsResult">
        select * from  sd_tunnels t where 1=1 and poll= '0'
        AND (t.dept_id = #{deptId} OR t.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{deptId},d.ancestors) ))
        <if test="tunnelId != null and tunnelId != ''">
            and t.tunnel_id = #{tunnelId}
        </if>

    </select>


    <select id="selectSiteTunnelList" resultMap="SdTunnelsResult">
        select * from  sd_tunnels t where 1=1 and poll= '0'
        AND (t.dept_id = #{deptId} OR t.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{deptId},d.ancestors) ))
        <if test="deptName != null and deptName != ''">
            and t.tunnel_name like concat('%', #{deptName}, '%')
        </if>

    </select>




    <select id="getChildCodeList" resultMap="SdTunnelsResult">
        select * from sd_tunnels where dept_id in(
        select dept_id from sys_dept WHERE
        dept_id = #{deptCode} OR dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE find_in_set(#{deptCode}, ancestors) )
        )
        union all(
        select * from sd_tunnels where tunnel_id = #{deptCode}
        )
    </select>

    <select id="getJlyTunnel" resultType="com.tunnel.business.domain.dataInfo.SdTunnels">
        SELECT
            t.tunnel_id AS tunnelId,
            t.tunnel_name AS tunnelName,
            d.dept_name AS deptName,
            t.tunnel_length AS tunnelLength,
            d.dept_id AS deptId,
            d.ancestors
        FROM
            sd_tunnels t
                LEFT JOIN sys_dept d ON t.dept_id = d.dept_id
        WHERE
            1 = 1 and t.poll = '0'
        <if test="deptId != null and deptId != ''">
            AND (
            d.dept_id = #{deptId}
            OR d.dept_id IN ( SELECT dept_id FROM sys_dept WHERE 1 = 1 AND FIND_IN_SET( #{deptId}, ancestors ) > 0 ))
        </if>
        order by t.order_num asc
    </select>

    <select id="selectAllSdTunnelsList" resultMap="SdTunnelsResult">
        select tunnel_id ,tunnel_name
        from sd_tunnels
    </select>


    <select id="selectAllSdTunnelsList1" resultMap="SdTunnelsResult">
        select tunnel_id ,tunnel_name
        from sd_tunnels where poll = '0'
    </select>



    <select id="selectTunnelDept" resultType="String">
        select dept_id
        from sd_tunnels where tunnel_id  = #{tunnelId}
    </select>


    <select id="selectTunnelLineList" resultMap="SdTunnelsResult">
        select * from sd_tunnels where dept_id in (
        select t.dept_id from sys_dept t
        <where>
            <if test="deptId != null and deptId != ''">
                AND (t.dept_id = #{deptId} OR t.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{deptId},d.ancestors) ))
            </if>
        </where>
        )
    </select>


    <select id="selectTunnels" resultMap="SdTunnelsResult">
        select t.tunnel_id from sd_tunnels t
        <where>
            <if test="deptId != null and deptId != ''">
                AND (t.dept_id = #{deptId} OR t.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{deptId},d.ancestors) ))
            </if>
        </where>
    </select>


    <select id="isTunnel" resultType="String">
        select tunnel_name
        from sd_tunnels where tunnel_id  = #{deviceId}
    </select>

    <select id="deptIdList" parameterType="Long" resultMap="SdTunnelsResult">
        select tunnel_id,
               tunnel_name,
               tunnel_code,
               tunnel_address,
               longitude,
               latitude,
               tunnel_station_id,
               tunnel_station_name,
               lane,
               coordinates,
               remake,
               tunnel_length,
               poll,
               store_configure,
               create_by,
               create_time,
               update_by,
               update_time,
               dept_id
        from sd_tunnels
        where dept_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
        #{id}
        </foreach>
    </select>

</mapper>

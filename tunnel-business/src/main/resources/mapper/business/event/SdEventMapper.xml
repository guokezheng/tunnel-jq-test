<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tunnel.business.mapper.event.SdEventMapper">

    <resultMap type="SdEvent" id="SdEventResult">
        <result property="id" column="id"/>
        <result property="tunnelId" column="tunnel_id"/>
        <result property="eventTypeId" column="event_type_id"/>
        <result property="eventTitle" column="event_title"/>
        <result property="eventTime" column="event_time"/>
        <result property="eventState" column="event_state"/>
        <result property="eventGrade" column="event_grade"/>
        <result property="eventLocation" column="event_location"/>
        <result property="eventDeath" column="event_death"/>
        <result property="eventInjured" column="event_injured"/>
        <result property="eventDescription" column="event_description"/>
        <result property="reservePlanId" column="reserve_plan_id"/>
        <result property="flowId" column="flow_id"/>
        <result property="warningId" column="warning_id"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="laneNo" column="lane_no"/>
        <result property="eventLongitude" column="longitude"/>
        <result property="eventLatitude" column="latitude"/>
        <result property="startTime" column="start_time"/>
        <result property="videoUrl" column="video_url"/>
        <result property="endTime" column="end_time"/>
        <result property="stationId" column="station_id"/>
        <result property="stakeNum" column="stake_num"/>
        <result property="stakeEndNum" column="stake_end_num"/>
        <result property="remark" column="remark"/>
        <result property="policePhone" column="police_phone"/>
        <result property="wreckerPhone" column="wrecker_phone"/>
        <result property="carOwnerPhone" column="car_owner_phone"/>
        <result property="tankerNum" column="tanker_num"/>
        <result property="passengerCarNum" column="passenger_car_num"/>
        <result property="truckNum" column="truck_num"/>
        <result property="smallCarNum" column="small_car_num"/>
        <result property="direction" column="direction"/>
        <result property="tunnelStationName" column="tunnel_station_name"/>
        <result property="slightInjured" column="slight_injured"/>
        <result property="eventSource" column="event_source"/>
        <result property="tunnelName" column="tunnel_name"/>
        <result property="simplifyName" column="simplify_name"/>
        <association property="eventType" column="id" javaType="SdEventType" resultMap="eventTypeResult"/>
        <association property="tunnels" column="tunnel_id" javaType="SdTunnels" resultMap="tunnelResult"/>
    </resultMap>

    <resultMap id="eventTypeResult" type="SdEventType">
        <id property="id" column="id"/>
        <result property="eventType" column="event_type"/>
        <result property="iconUrl" column="icon_url"/>
        <result property="simplifyName" column="simplify_name"/>
        <result property="prevControlType" column="prev_control_type"/>
    </resultMap>

    <resultMap id="tunnelResult" type="SdTunnels">
        <id property="tunnelId" column="tunnel_id"/>
        <result property="tunnelName" column="tunnel_name"/>
    </resultMap>

    <sql id="selectSdEventVo">
        select id, tunnel_id, event_type_id, event_title, event_source, event_time, event_state, event_grade, event_location, event_death, event_injured, slight_injured, event_description, reserve_plan_id, flow_id, warning_id, station_id, lane_no, longitude, latitude, stake_num, start_time, end_time, video_url, create_by, create_time, update_by, update_time, direction, small_car_num, truck_num, passenger_car_num, tanker_num, car_owner_phone, wrecker_phone, police_phone, remark
        from sd_event
    </sql>

    <select id ="eventPopAll" resultType="Map" parameterType="string">
       SELECT
	id,
	eventTitle,
	iconUrl,
	simplifyName,
	startTime
FROM
	(
							SELECT
								id,
								event_title AS eventTitle,
								icon_url AS iconUrl,
								simplify_name AS simplifyName,
								DATE_FORMAT( start_time, '%Y-%m-%d %H:%i:%s' ) AS startTime
							FROM
								(
							SELECT
								A.id,
								A.event_title,
								B.icon_url,
								B.simplify_name,
								A.start_time
							FROM
								sd_event A
								LEFT JOIN sd_event_type B ON A.event_type_id = B.id
							WHERE
								A.event_state = '3'
								AND TO_DAYS( A.start_time ) = TO_DAYS( NOW( ) )
                                AND B.is_usable = '1'
								) a
								UNION
							SELECT
								id,
								eventTitle,
								iconUrl,
								simplifyName,
								DATE_FORMAT( startTime, '%Y-%m-%d %H:%i:%s' )
							FROM
								(
							SELECT
								fault.id,
								concat( tunnel.tunnel_name, DATA.dict_label, devices.eq_name, type.dict_label ) AS eventTitle,
								fault.create_time AS startTime,
								'故障' AS simplifyName,
								( SELECT icon_url FROM sd_event_type WHERE id = '200' AND is_usable = '1' ) AS iconUrl
							FROM
								sd_fault_list fault
								LEFT JOIN sd_tunnels tunnel ON fault.tunnel_id = tunnel.tunnel_id
								LEFT JOIN sd_devices devices ON devices.eq_id = fault.eq_id
								LEFT JOIN sys_dict_data DATA ON DATA.dict_value = devices.eq_direction
								AND DATA.dict_type = 'sd_direction'
								LEFT JOIN sys_dict_data type ON type.dict_value = fault.fault_type
								AND type.dict_type = 'fault_type'
							WHERE
								fault.fault_status = '0'
								AND TO_DAYS( fault.create_time ) = TO_DAYS( NOW( ) )
								) b
	) AS MERGE
ORDER BY MERGE.startTime DESC
	LIMIT ${subIndex}
    </select>

    <select id="eventPopFault" resultType="hashmap" parameterType="string">
        select fault.id,concat(tunnel.tunnel_name,data.dict_label,devices.eq_name,type.dict_label) as eventTitle,fault.create_time as startTime,'故障' as simplifyName,(select icon_url from sd_event_type where id = '200' AND is_usable = '1') as iconUrl from sd_fault_list fault
            left join sd_tunnels tunnel on fault.tunnel_id = tunnel.tunnel_id
            left join sd_devices devices on devices.eq_id = fault.eq_id
            left join sys_dict_data data on data.dict_value = devices.eq_direction and data.dict_type='sd_direction'
            left join sys_dict_data type on type.dict_value = fault.fault_type and type.dict_type='fault_type'
        where fault.fault_status = '0' and TO_DAYS(fault.create_time) = TO_DAYS(NOW())
        ORDER BY
            fault.create_time DESC limit ${subIndex}
    </select>

    <select id = "getEventUntreatedNum" resultType="int">
        SELECT
                count( id )+(
                SELECT
                    count( id )
                FROM
                    sd_fault_list
                WHERE
                    fault_status = '0'
                  AND TO_DAYS( create_time ) = TO_DAYS(
                        NOW()) ) as num
        FROM
            sd_event
        WHERE
            event_state = '3'
          AND TO_DAYS( start_time ) = TO_DAYS(
                NOW())
    </select>

    <select id="selectSdEventList" parameterType="SdEvent" resultMap="SdEventResult">
        select A.id, A.tunnel_id, A.event_type_id, A.event_title,A.event_source, A.event_time, A.event_state, A.event_grade,
        A.event_location, A.event_death, A.event_injured,A.slight_injured, A.event_description, A.reserve_plan_id,
        A.flow_id, A.warning_id,A.station_id, A.lane_no,A.longitude, A.latitude, A.stake_num, A.stake_end_num, A.start_time, A.end_time,A.video_url,
        A.create_by, A.create_time, A.update_by, A.update_time,A.direction,A.small_car_num,A.truck_num,A.passenger_car_num,A.tanker_num,
        A.car_owner_phone, A.wrecker_phone,A.police_phone,A.remark,
        B.event_type,C.tunnel_name, C.tunnel_station_name,B.icon_url,B.simplify_name
        from sd_event A
        left join sd_event_type B
        on A.event_type_id = B.id
        left join sd_tunnels C on A.tunnel_id = C.tunnel_id
        <where>
            1=1
            AND B.is_usable = '1'
            <if test="id != null  and id != ''">and A.id = #{id}</if>
            <!-- <if test="tunnelStationName != null  and tunnelStationName != ''">and C.id = #{id}</if>-->
            <if test="deptId != null  and deptId != ''">and C.dept_id = #{deptId}</if>
            <if test="tunnelId != null  and tunnelId != ''">and A.tunnel_id = #{tunnelId}</if>
            <if test="eventTypeId != null">and A.event_type_id = #{eventTypeId}</if>
            <if test="eventTitle != null  and eventTitle != ''">and A.event_title = #{eventTitle}</if>
            <if test="eventTime != null ">and A.event_time = #{eventTime}</if>
            <if test="eventState != null  and eventState != ''">and A.event_state = #{eventState}</if>
            <if test="eventGrade != null  and eventGrade != ''">and A.event_grade = #{eventGrade}</if>
            <if test="eventLocation != null  and eventLocation != ''">and A.event_location = #{eventLocation}</if>
            <if test="eventDeath != null ">and A.event_death = #{eventDeath}</if>
            <if test="eventInjured != null ">and A.event_injured = #{eventInjured}</if>
            <if test="eventDescription != null  and eventDescription != ''">and A.event_description =
                #{eventDescription}
            </if>
            <if test="startTime != null and startTime != ''"><!-- 开始时间检索 -->
                and date_format(A.event_time,'%y%m%d') &gt;= date_format(#{startTime},'%y%m%d')
            </if>
            <if test="endTime != null and endTime != ''"><!-- 结束时间检索 -->
                and date_format(A.event_time,'%y%m%d') &lt;= date_format(#{endTime},'%y%m%d')
            </if>
            <if test="params.deptId != null and params.deptId != ''">
                AND (C.dept_id = #{params.deptId} OR C.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{params.deptId},d.ancestors) ))
            </if>
            <if test="searchValue != null and searchValue != ''">
                and B.prev_control_type = #{searchValue}
            </if>
            <if test="remark != null and remark != ''">
                and A.event_state = '3'
            </if>
        </where>
        order by A.start_time desc
    </select>

    <select id="selectSdEventById" parameterType="Long" resultMap="SdEventResult">
        <include refid="selectSdEventVo"/>
        where id = #{id}
    </select>

    <!-- 查询事件状态为（已处理、处理中）的数量 -->
    <select id="selectEventStateCount" resultMap="SdEventResult">
        SELECT COUNT(1) FROM sd_event
        <where>
            <if test="eventState != null ">and event_state = #{eventState}</if>
        </where>
    </select>

    <insert id="insertSdEvent" parameterType="SdEvent" useGeneratedKeys="true" keyProperty="id">
        insert into sd_event
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="tunnelId != null">tunnel_id,</if>
            <if test="eventTypeId != null">event_type_id,</if>
            <if test="eventTitle != null">event_title,</if>
            <if test="eventTime != null">event_time,</if>
            <if test="eventState != null">event_state,</if>
            <if test="eventGrade != null">event_grade,</if>
            <if test="eventLocation != null">event_location,</if>
            <if test="eventDeath != null">event_death,</if>
            <if test="eventInjured != null">event_injured,</if>
            <if test="eventDescription != null">event_description,</if>
            <if test="reservePlanId != null">reserve_plan_id,</if>
            <if test="flowId != null">flow_id,</if>
            <if test="warningId != null">warning_id,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
            <if test="policePhone != null">police_phone,</if>
            <if test="wreckerPhone != null">wrecker_phone,</if>
            <if test="carOwnerPhone != null">car_owner_phone,</if>
            <if test="tankerNum != null">tanker_num,</if>
            <if test="passengerCarNum != null">passenger_car_num,</if>
            <if test="truckNum != null">truck_num,</if>
            <if test="smallCarNum != null">small_car_num,</if>
            <if test="direction != null">direction,</if>
            <if test="slightInjured != null">slight_injured,</if>
            <if test="startTime != null">start_time,</if>
            <if test="endTime != null">end_time,</if>
            <if test="stakeNum != null">stake_num,</if>
            <if test="stakeEndNum != null">stake_end_num,</if>
            <if test="laneNo != null">lane_no,</if>
            <if test="videoUrl != null">video_url,</if>
            <if test="eventLongitude != null">longitude,</if>
            <if test="eventLatitude != null">latitude,</if>
            <if test="eventSource != null">event_source,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="tunnelId != null">#{tunnelId},</if>
            <if test="eventTypeId != null">#{eventTypeId},</if>
            <if test="eventTitle != null">#{eventTitle},</if>
            <if test="eventTime != null">#{eventTime},</if>
            <if test="eventState != null">#{eventState},</if>
            <if test="eventGrade != null">#{eventGrade},</if>
            <if test="eventLocation != null">#{eventLocation},</if>
            <if test="eventDeath != null">#{eventDeath},</if>
            <if test="eventInjured != null">#{eventInjured},</if>
            <if test="eventDescription != null">#{eventDescription},</if>
            <if test="reservePlanId != null">#{reservePlanId},</if>
            <if test="flowId != null">#{flowId},</if>
            <if test="warningId != null">#{warningId},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
            <if test="policePhone != null">#{policePhone},</if>
            <if test="wreckerPhone != null">#{wreckerPhone},</if>
            <if test="carOwnerPhone != null">#{carOwnerPhone},</if>
            <if test="tankerNum != null">#{tankerNum},</if>
            <if test="passengerCarNum != null">#{passengerCarNum},</if>
            <if test="truckNum != null">#{truckNum},</if>
            <if test="smallCarNum != null">#{smallCarNum},</if>
            <if test="direction != null">#{direction},</if>
            <if test="slightInjured != null">#{slightInjured},</if>
            <if test="startTime != null">#{startTime},</if>
            <if test="endTime != null">#{endTime},</if>
            <if test="stakeNum != null">#{stakeNum},</if>
            <if test="stakeEndNum != null">#{stakeEndNum},</if>
            <if test="laneNo != null">#{laneNo},</if>
            <if test="videoUrl != null">#{videoUrl},</if>
            <if test="eventLongitude != null">#{eventLongitude},</if>
            <if test="eventLatitude != null">#{eventLatitude},</if>
            <if test="eventSource != null">#{eventSource},</if>
        </trim>
    </insert>

    <update id="updateSdEvent" parameterType="SdEvent">
        update sd_event
        <trim prefix="SET" suffixOverrides=",">
            <if test="tunnelId != null">tunnel_id = #{tunnelId},</if>
            <if test="eventTypeId != null">event_type_id = #{eventTypeId},</if>
            <if test="eventTitle != null">event_title = #{eventTitle},</if>
            <if test="eventTime != null">event_time = #{eventTime},</if>
            <if test="eventState != null">event_state = #{eventState},</if>
            <if test="eventGrade != null">event_grade = #{eventGrade},</if>
            <if test="eventLocation != null">event_location = #{eventLocation},</if>
            <if test="eventDeath != null">event_death = #{eventDeath},</if>
            <if test="eventInjured != null">event_injured = #{eventInjured},</if>
            <if test="eventDescription != null">event_description = #{eventDescription},</if>
            <if test="reservePlanId != null">reserve_plan_id = #{reservePlanId},</if>
            <if test="flowId != null">flow_id = #{flowId},</if>
            <if test="warningId != null">warning_id = #{warningId},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="policePhone != null">police_phone = #{policePhone},</if>
            <if test="wreckerPhone != null">wrecker_phone = #{wreckerPhone},</if>
            <if test="carOwnerPhone != null">car_owner_phone = #{carOwnerPhone},</if>
            <if test="tankerNum != null">tanker_num = #{tankerNum},</if>
            <if test="passengerCarNum != null">passenger_car_num = #{passengerCarNum},</if>
            <if test="truckNum != null">truck_num = #{truckNum},</if>
            <if test="smallCarNum != null">small_car_num = #{smallCarNum},</if>
            <if test="direction != null">direction = #{direction},</if>
            <if test="slightInjured != null">slight_injured = #{slightInjured},</if>
            <if test="eventSource != null">event_source = #{eventSource},</if>
            <if test="stakeNum != null">stake_num = #{stakeNum},</if>
            <if test="stakeEndNum != null">stake_end_num = #{stakeEndNum},</if>
            <if test="laneNo != null">lane_no = #{laneNo},</if>
            <if test="startTime != null">start_time = #{startTime},</if>
            <if test="endTime != null">end_time = #{endTime},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="updateVideoById">
        update sd_event
        set video_url=#{eventVideoUrl}
        where id = #{eventId}
    </update>

    <delete id="deleteSdEventById" parameterType="Long">
        delete
        from sd_event
        where id = #{id}
    </delete>

    <delete id="deleteSdEventByIds" parameterType="String">
        delete from sd_event where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="tollById">
        select *
        from sys_dept
        where parent_id in
              (select dept_id from sys_dept where parent_id in (SELECT dept_id FROM `sys_dept` where parent_id = '0'))
    </select>

    <select id="getTodayEventCount" resultType="java.util.Map">
        select result.process,result.allnum,
               case when result.process>0 then CONCAT(convert((result.process/result.allnum)*100,decimal(10,2)),'%')
                    when result.process=0 then 0 end as bl
        from (select count(case when event_state=1  then 1 end) as process,count(id) as allnum
              from sd_event where TO_DAYS(start_time) = TO_DAYS(NOW())) result
    </select>

    <select id="getEvent" parameterType="SdEvent" resultMap="SdEventResult">
        select A.id, A.tunnel_id, A.event_type_id, A.event_title, A.event_time, A.event_state, A.event_grade,
        B.icon_url,B.prev_control_type,B.simplify_name,A.event_location, A.event_death, A.event_injured, A.event_description, A.reserve_plan_id,
        A.flow_id, A.warning_id, A.create_by, A.create_time, A.update_by, A.update_time, B.event_type,
        C.tunnel_name, A.remark, A.police_phone, A.wrecker_phone, A.car_owner_phone, A.tanker_num, A.passenger_car_num,
        A.small_car_num, A.direction, A.slight_injured, A.truck_num,  DATE_FORMAT( A.start_time, '%Y-%m-%d %H:%i:%s' ) as start_time, A.end_time,A.stake_num,C.tunnel_station_name
        from sd_event A
        left join sd_event_type B
        on A.event_type_id = B.id
        left join sd_tunnels C on A.tunnel_id = C.tunnel_id
        where
        TO_DAYS(A.start_time) = TO_DAYS(NOW())
        AND B.is_usable = '1'
        <if test="eventState != null  and eventState != ''">and A.event_state = #{eventState}</if>
        <if test="params.deptId != null and params.deptId != ''">
            AND (C.dept_id = #{params.deptId} OR C.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{params.deptId},d.ancestors) ))
        </if>
        order by A.start_time desc
    </select>

    <!--根据事件id列表查询事件信息-->
    <select id="getEventList" parameterType="Long" resultMap="SdEventResult">
        select A.id, A.tunnel_id, A.event_type_id, A.event_title,A.event_source, A.event_time, A.event_state, A.event_grade,
        A.event_location, A.event_death, A.event_injured, A.slight_injured,A.event_description, A.reserve_plan_id,
        A.flow_id, A.warning_id,A.station_id, A.lane_no, A.longitude, A.latitude, A.stake_num, A.start_time, A.end_time, A.video_url,
        A.create_by, A.create_time, A.update_by, A.update_time, A.direction,A.small_car_num,A.truck_num, A.passenger_car_num,A.tanker_num,
        A.car_owner_phone, A.wrecker_phone,A.police_phone,A.remark,
        B.event_type,C.tunnel_name, C.tunnel_station_name
        from sd_event A
        left join sd_event_type B on A.event_type_id = B.id
        left join sd_tunnels C on A.tunnel_id = C.tunnel_id
        where A.id in
        <foreach collection="list" item="eventId" open="(" separator="," close=")">
            #{eventId}
        </foreach>
        AND B.is_usable = '1'
    </select>

</mapper>

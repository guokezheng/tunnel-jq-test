<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tunnel.business.mapper.event.SdReservePlanMapper">

    <resultMap type="SdReservePlan" id="SdReservePlanResult">
        <result property="id"    column="id"    />
        <result property="tunnelId" column="tunnel_id" />
        <result property="subareaId" column="subarea_id" />
        <result property="planTypeId"    column="plan_type_id"    />
        <result property="category" column="category" />
        <result property="planDescription"    column="plan_description"    />
        <result property="planName"    column="plan_name"    />
        <result property="planFileId"    column="plan_file_id"    />
        <result property="strategyId"    column="strategy_id"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <association property="eventType"  column="id" javaType="SdEventType" resultMap="eventTypeResult" />
        <association property="strategy"  column="id" javaType="SdStrategy" resultMap="strategyResult" />
        <association property="sdTunnelSubarea" column="subarea_id" javaType="sdTunnelSubarea" resultMap="subareaResult" />
        <association property="sdTunnels" javaType="SdTunnels" column="tunnel_id" resultMap="tunnelResult" />
    </resultMap>

	<resultMap id="eventTypeResult" type="SdEventType">
		<id  property="id" column="id" />
		<result property="eventType" column="event_type"   />
	</resultMap>

	<resultMap id="strategyResult" type="SdStrategy">
		<id  property="id" column="id" />
		<result property="tunnelId"    column="tunnel_id"    />
        <result property="strategyName"    column="strategy_name"    />
        <result property="strategyType"    column="strategy_type"    />
        <result property="strategyInfo"    column="strategy_info"    />
        <result property="warningId"    column="warning_id"    />
        <result property="schedulerTime"    column="scheduler_time"    />
	</resultMap>

    <resultMap id="subareaResult" type="SdTunnelSubarea">
        <id property="sId" column="subarea_id" />
        <result property="sName" column="s_name" />
        <result property="tunnelId" column="tunnel_id" />
    </resultMap>

    <resultMap id="tunnelResult" type="SdTunnels">
        <id property="tunnelId" column="tunnel_id" />
        <result property="tunnelName" column="tunnel_name" />
    </resultMap>


    <sql id="selectSdReservePlanVo">
        select id,subarea_id, plan_type_id, category, plan_description, plan_name, plan_file_id, create_by, create_time, update_by, update_time from sd_reserve_plan
    </sql>

    <select id="selectSdReservePlanList" parameterType="SdReservePlan" resultMap="SdReservePlanResult">
        select A.id, F.tunnel_id,A.subarea_id,A.plan_type_id, A.plan_description, A.plan_name, A.plan_file_id, A.category,
#             --group_concat(DISTINCT E.strategy_id) strategy_id,
        (select GROUP_CONCAT(process.strategy_id) from sd_reserve_process process where process.reserve_id =  A.id) as strategy_id,
        B.event_type,
        (select GROUP_CONCAT(strategy.strategy_name) from sd_strategy strategy,sd_reserve_process process  where
                process.strategy_id = strategy.id and process.reserve_id = A.id) as strategy_name,
#             --group_concat(DISTINCT C.strategy_name) strategy_name,
            C.strategy_info, C.strategy_type, D.s_name,F.tunnel_name
        from sd_reserve_plan A
        left join sd_event_type B on A.plan_type_id = B.id
        left join sd_reserve_process E on A.id = E.reserve_id
        left join sd_strategy C on E.strategy_id = C.id
        left join sd_tunnel_subarea D on D.s_id = A.subarea_id
        left join sd_tunnels F on D.tunnel_id = F.tunnel_id
        <where>
            <if test="tunnelId != null">and F.tunnel_id = #{tunnelId}</if>
            <if test="category != null">and A.category = #{category}</if>
            <if test="planTypeId != null "> and A.plan_type_id = #{planTypeId}</if>
            <if test="planName != null  and planName != ''"> and A.plan_name like concat('%', #{planName}, '%')</if>
            <if test="planFileId != null  and planFileId != ''"> and A.plan_file_id = #{planFileId}</if>
            <if test="params.deptId != null and params.deptId != ''">
                AND (F.dept_id = #{params.deptId} OR F.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{params.deptId},d.ancestors) ))
            </if>
        </where>
        group by A.id
        ORDER BY A.id DESC
    </select>

    <select id="selectSdReservePlanById" parameterType="Long" resultMap="SdReservePlanResult">
        <include refid="selectSdReservePlanVo"/>
        where id = #{id}
    </select>

    <insert id="insertSdReservePlan" parameterType="SdReservePlan" useGeneratedKeys="true" keyProperty="id">
        insert into sd_reserve_plan
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="subareaId != null">subarea_id,</if>
            <if test="planTypeId != null">plan_type_id,</if>
            <if test="category != null">category,</if>
            <if test="planDescription != null">plan_description,</if>
            <if test="planName != null">plan_name,</if>
            <if test="planFileId != null">plan_file_id,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="subareaId != null">#{subareaId},</if>
            <if test="planTypeId != null">#{planTypeId},</if>
            <if test="category != null" >#{category},</if>
            <if test="planDescription != null">#{planDescription},</if>
            <if test="planName != null">#{planName},</if>
            <if test="planFileId != null">#{planFileId},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateSdReservePlan" parameterType="SdReservePlan">
        update sd_reserve_plan
        <trim prefix="SET" suffixOverrides=",">
            <if test="subareaId != null">subarea_id = #{subareaId},</if>
            <if test="planTypeId != null">plan_type_id = #{planTypeId},</if>
            <if test="category != null">category = #{category},</if>
            <if test="planDescription != null">plan_description = #{planDescription},</if>
            <if test="planName != null">plan_name = #{planName},</if>
            <if test="planFileId != null">plan_file_id = #{planFileId},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSdReservePlanById" parameterType="Long">
        delete from sd_reserve_plan where id = #{id}
    </delete>

    <delete id="deleteSdReservePlanByIds" parameterType="String">
        delete from sd_reserve_plan where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <delete id="deleteSdReservePlanByRlIds" parameterType="String">
        delete from sd_reserve_plan where plan_file_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="checkIfSingleReservePlan" parameterType="SdReservePlan" resultMap="SdReservePlanResult">
        <include refid="selectSdReservePlanVo"/>
        <where>
            <if test="planTypeId != null "> and plan_type_id = #{planTypeId}</if>
            <if test="planName != null  and planName != ''"> and plan_name = #{planName}</if>
            <if test="planDescription != null and planDescription != ''"> and plan_description = #{planDescription}</if>
        </where>
    </select>

    <select id="selectPlanCategory" resultType="map" >
        select id id, plan_type name
        from sd_plan_type
    </select>

    <select id="selectSdReservePlanBySubareaId" parameterType="sdReservePlan" resultMap="SdReservePlanResult">
        select id, subarea_id, plan_type_id, category, plan_description, plan_name, plan_file_id
        from sd_reserve_plan
        <where>
            <if test="subareaId != null"> and subarea_id = #{subareaId}</if>
            <if test="category != null"> and category = #{category}</if>
        </where>
    </select>

</mapper>

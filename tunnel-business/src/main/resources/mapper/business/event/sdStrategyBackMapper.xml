<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tunnel.business.mapper.event.SdStrategyBackMapper">
    
    <resultMap type="SdStrategyBack" id="SdStrategyBackResult">
        <result property="id"    column="id"    />
        <result property="tunnelId"    column="tunnel_id"    />
        <result property="warningId"    column="warning_id"    />
        <result property="eqId"    column="eq_id"    />
        <result property="eqType"    column="eq_type"    />
        <result property="strategyType"    column="strategy_type"    />
        <result property="stateName"    column="state_name"    />
        <result property="deviceState"    column="device_state"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
    </resultMap>

    <sql id="selectSdStrategyBackVo">
        select id, tunnel_id, warning_id, eq_id, eq_type, strategy_type, state_name, device_state, create_by, create_time, update_by from sd_strategy_back
    </sql>

    <select id="selectSdStrategyBackList" parameterType="SdStrategyBack" resultMap="SdStrategyBackResult">
        <include refid="selectSdStrategyBackVo"/>
        <where>  
            <if test="warningId != null "> and warning_id = #{warningId}</if>
        </where>
    </select>
    
    <select id="selectSdStrategyBackById" parameterType="Long" resultMap="SdStrategyBackResult">
        <include refid="selectSdStrategyBackVo"/>
        where id = #{id}
    </select>

    <select id="selectSdStrategyBackByWarId" parameterType="Long" resultMap="SdStrategyBackResult">
        <include refid="selectSdStrategyBackVo"/>
        where warning_id = #{warningId}
    </select>

    <insert id="insertSdStrategyBack" parameterType="SdStrategyBack" useGeneratedKeys="true" keyProperty="id">
        insert into sd_strategy_back
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tunnelId != null">tunnel_id,</if>
            <if test="warningId != null">warning_id,</if>
            <if test="eqId != null">eq_id,</if>
            <if test="eqType != null">eq_type,</if>
            <if test="strategyType != null">strategy_type,</if>
            <if test="stateName != null">state_name,</if>
            <if test="deviceState != null">device_state,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="tunnelId != null">#{tunnelId},</if>
            <if test="warningId != null">#{warningId},</if>
            <if test="eqId != null">#{eqId},</if>
            <if test="eqType != null">#{eqType},</if>
            <if test="strategyType != null">#{strategyType},</if>
            <if test="stateName != null">#{stateName},</if>
            <if test="deviceState != null">#{deviceState},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
         </trim>
    </insert>

    <update id="updateSdStrategyBack" parameterType="SdStrategyBack">
        update sd_strategy_back
        <trim prefix="SET" suffixOverrides=",">
            <if test="tunnelId != null">tunnel_id = #{tunnelId},</if>
            <if test="warningId != null">warning_id = #{warningId},</if>
            <if test="eqId != null">eq_id = #{eqId},</if>
            <if test="eqType != null">eq_type = #{eqType},</if>
            <if test="strategyType != null">strategy_type = #{strategyType},</if>
            <if test="stateName != null">state_name = #{stateName},</if>
            <if test="deviceState != null">device_state = #{deviceState},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSdStrategyBackById" parameterType="Long">
        delete from sd_strategy_back where id = #{id}
    </delete>
    <delete id="deleteSdStrategyBackByWarId" parameterType="Long">
        delete from sd_strategy_back where warning_id = #{warningId}
    </delete>

    <delete id="deleteSdStrategyBackByIds" parameterType="String">
        delete from sd_strategy_back where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
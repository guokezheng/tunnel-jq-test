<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tunnel.business.mapper.trafficOperationControl.controlConfig.SdControlConfigCauseMapper">

    <resultMap type="SdControlConfigCause" id="SdControlConfigCauseResult">
        <result property="id"    column="id"    />
        <result property="configLevelId"    column="config_level_id"    />
        <result property="causeType"    column="cause_type"    />
        <!--<result property="causeValue"    column="cause_value"    />-->
        <result property="roadCondition" column="road_condition"/>
        <result property="visibilityMin" column="visibility_min"/>
        <result property="visibilityMax" column="visibility_max"/>
        <result property="congestionDegree" column="congestion_degree"/>
        <result property="incidentType" column="incident_type"/>
        <result property="incidentGrade" column="incident_grade"/>
        <result property="createTime"    column="create_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="delFlag"    column="del_flag"    />
    </resultMap>

    <sql id="selectSdControlConfigCauseVo">
        select id, config_level_id, cause_type,
    <!-- cause_value,-->
        road_condition,visibility_min,visibility_max,congestion_degree,incident_type,incident_grade,
      create_time, create_by, update_time, update_by, del_flag from sd_control_config_cause
 </sql>

 <select id="selectSdControlConfigCauseList" parameterType="SdControlConfigCause" resultMap="SdControlConfigCauseResult">
     <include refid="selectSdControlConfigCauseVo"/>
     <where>
         <if test="configLevelId != null "> and config_level_id = #{configLevelId}</if>
         <if test="causeType != null  and causeType != ''"> and cause_type = #{causeType}</if>
         <!--<if test="causeValue != null  and causeValue != ''"> and cause_value = #{causeValue}</if>-->
     </where>
 </select>

 <select id="selectSdControlConfigCauseById" parameterType="Long" resultMap="SdControlConfigCauseResult">
     <include refid="selectSdControlConfigCauseVo"/>
     where id = #{id}
 </select>

 <insert id="insertSdControlConfigCause" parameterType="SdControlConfigCause" useGeneratedKeys="true" keyProperty="id">
     insert into sd_control_config_cause
     <trim prefix="(" suffix=")" suffixOverrides=",">
         <if test="configLevelId != null">config_level_id,</if>
         <if test="causeType != null">cause_type,</if>
         <!--<if test="causeValue != null">cause_value,</if>-->
         <if test="roadCondition != null">road_condition,</if>
         <if test="visibilityMin != null">visibility_min,</if>
         <if test="visibilityMax != null">visibility_max,</if>
         <if test="congestionDegree != null">congestion_degree,</if>
         <if test="incidentType != null">incident_type,</if>
         <if test="incidentGrade != null">incident_grade,</if>
         <if test="createTime != null">create_time,</if>
         <if test="createBy != null">create_by,</if>
         <if test="updateTime != null">update_time,</if>
         <if test="updateBy != null">update_by,</if>
         <if test="delFlag != null">del_flag,</if>
      </trim>
     <trim prefix="values (" suffix=")" suffixOverrides=",">
         <if test="configLevelId != null">#{configLevelId},</if>
         <if test="causeType != null">#{causeType},</if>
         <!--<if test="causeValue != null">#{causeValue},</if>-->
         <if test="roadCondition != null">#{roadCondition},</if>
         <if test="visibilityMin != null">#{visibilityMin}</if>
         <if test="visibilityMax != null">#{visibilityMax},</if>
         <if test="congestionDegree != null">#{congestionDegree},</if>
         <if test="incidentType != null">#{incidentType},</if>
         <if test="incidentGrade != null">#{incidentGrade},</if>
         <if test="createTime != null">#{createTime},</if>
         <if test="createBy != null">#{createBy},</if>
         <if test="updateTime != null">#{updateTime},</if>
         <if test="updateBy != null">#{updateBy},</if>
         <if test="delFlag != null">#{delFlag},</if>
      </trim>
 </insert>

 <update id="updateSdControlConfigCause" parameterType="SdControlConfigCause">
     update sd_control_config_cause
     <trim prefix="SET" suffixOverrides=",">
         <if test="configLevelId != null">config_level_id = #{configLevelId},</if>
         <if test="causeType != null">cause_type = #{causeType},</if>
         <!--<if test="causeValue != null">cause_value = #{causeValue},</if>-->
         <if test="roadCondition != null">road_condition = #{roadCondition},</if>
         <if test="visibilityMin != null">visibility_min = #{visibilityMin},</if>
         <if test="visibilityMax != null">visibility_max = #{visibilityMax},</if>
         <if test="congestionDegree != null">congestion_degree = #{congestionDegree},</if>
         <if test="incidentType != null">incident_type = #{incidentType},</if>
         <if test="incidentGrade != null">incident_grade = #{incidentGrade},</if>
         <if test="createTime != null">create_time = #{createTime},</if>
         <if test="createBy != null">create_by = #{createBy},</if>
         <if test="updateTime != null">update_time = #{updateTime},</if>
         <if test="updateBy != null">update_by = #{updateBy},</if>
         <if test="delFlag != null">del_flag = #{delFlag},</if>
     </trim>
     where id = #{id}
 </update>

 <delete id="deleteSdControlConfigCauseById" parameterType="Long">
     delete from sd_control_config_cause where id = #{id}
 </delete>

 <delete id="deleteSdControlConfigCauseByIds" parameterType="String">
     delete from sd_control_config_cause where id in
     <foreach item="id" collection="array" open="(" separator="," close=")">
         #{id}
     </foreach>
 </delete>

 <!--添加多条管控原因记录-->
    <insert id="insertMultiConfigCause">
      insert into sd_control_config_cause(config_level_id, cause_type,
    <!--cause_value, -->
        road_condition,visibility_min,visibility_max,congestion_degree,
        incident_type,incident_grade,
    create_time, create_by)
    values
    <foreach collection="list" item="item" separator=",">
        (#{item.configLevelId},#{item.causeType},
    <!--#{item.causeValue},-->
        #{item.roadCondition},#{item.visibilityMin},#{item.visibilityMax},#{item.congestionDegree},
        #{item.incidentType},#{item.incidentGrade},
    #{item.createTime},null)
</foreach>
</insert>

<!--根据等级配置id删除管控原因记录-->
    <delete id="delConfigCauseByLevelId">
        delete from sd_control_config_cause where config_level_id = #{configLevelId}
    </delete>

    <delete id="delConfigCauseByLevelIds">
        delete from sd_control_config_cause where config_level_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!--根据等级配置id查询管控原因-->
    <select id="getConfigCauseByLevelId" resultMap="SdControlConfigCauseResult">
        <include refid="selectSdControlConfigCauseVo"/>
        where config_level_id = #{configLevelId}
        order by create_time desc,update_time desc
    </select>

    <!--查询可用的管控等级配置的管控原因-->
    <select id="selectValidConfigCauseList" resultMap="SdControlConfigCauseResult">
        select c.id, c.config_level_id, c.cause_type,
        c.road_condition,c.visibility_min,c.visibility_max,c.congestion_degree,c.incident_type,c.incident_grade
        from sd_control_config_cause c
        inner join sd_control_level_config t on c.config_level_id = t.id
        where t.status = #{status}
    </select>
</mapper>

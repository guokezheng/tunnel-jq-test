<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tunnel.platform.mapper.dataInfo.SdDeviceDataMapper">

    <resultMap type="SdDeviceData" id="SdDeviceDataResult">
        <result property="id"    column="id"    />
        <result property="deviceId"    column="device_id"    />
        <result property="itemId"    column="item_id"    />
        <result property="data"    column="data"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectSdDeviceDataVo">
        select id, device_id, item_id, data, create_by, create_time, update_by, update_time from sd_device_data
    </sql>

    <select id="selectSdDeviceDataList" parameterType="SdDeviceData" resultMap="SdDeviceDataResult">
        <include refid="selectSdDeviceDataVo"/>
        <where>
            <if test="deviceId != null  and deviceId != ''"> and device_id = #{deviceId}</if>
            <if test="itemId != null "> and item_id = #{itemId}</if>
            <if test="data != null  and data != ''"> and data = #{data}</if>
        </where>
    </select>

    <select id="selectSdDeviceDataById" parameterType="Long" resultMap="SdDeviceDataResult">
        <include refid="selectSdDeviceDataVo"/>
        where id = #{id}
    </select>

    <insert id="insertSdDeviceData" parameterType="SdDeviceData" useGeneratedKeys="true" keyProperty="id">
        insert into sd_device_data
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deviceId != null">device_id,</if>
            <if test="itemId != null">item_id,</if>
            <if test="data != null">data,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="deviceId != null">#{deviceId},</if>
            <if test="itemId != null">#{itemId},</if>
            <if test="data != null">#{data},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateSdDeviceData" parameterType="SdDeviceData">
        update sd_device_data
        <trim prefix="SET" suffixOverrides=",">
            <if test="deviceId != null">device_id = #{deviceId},</if>
            <if test="itemId != null">item_id = #{itemId},</if>
            <if test="data != null">data = #{data},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSdDeviceDataById" parameterType="Long">
        delete from sd_device_data where id = #{id}
    </delete>

    <delete id="deleteSdDeviceDataByIds" parameterType="String">
        delete from sd_device_data where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectLastRecord" parameterType="SdDeviceData" resultMap="SdDeviceDataResult">
        <include refid="selectSdDeviceDataVo"/>
        <where>
            <if test="deviceId != null  and deviceId != ''"> and device_id = #{deviceId}</if>
            <if test="itemId != null "> and item_id = #{itemId}</if>
        </where>
        ORDER BY id desc LIMIT 1
    </select>

    <select id="getTodayCOVIData" resultType="hashmap">
        SELECT
        a.order_hour as order_hour, IFNULL(b.count,0) as count
        FROM(
        SELECT 0 AS order_hour UNION ALL SELECT 1 AS order_hour UNION ALL
        SELECT 2 AS order_hour UNION ALL SELECT 3 AS order_hour UNION ALL
        SELECT 4 AS order_hour UNION ALL SELECT 5 AS order_hour UNION ALL
        SELECT 6 AS order_hour UNION ALL SELECT 7 AS order_hour UNION ALL
        SELECT 8 AS order_hour UNION ALL SELECT 9 AS order_hour UNION ALL
        SELECT 10 AS order_hour UNION ALL SELECT 11 AS order_hour UNION ALL
        SELECT 12 AS order_hour UNION ALL SELECT 13 AS order_hour UNION ALL
        SELECT 14 AS order_hour UNION ALL SELECT 15 AS order_hour UNION ALL
        SELECT 16 AS order_hour UNION ALL SELECT 17 AS order_hour UNION ALL
        SELECT 18 AS order_hour UNION ALL SELECT 19 AS order_hour UNION ALL
        SELECT 20 AS order_hour UNION ALL SELECT 21 AS order_hour UNION ALL
        SELECT 22 AS order_hour UNION ALL SELECT 23 AS order_hour) as a
        LEFT JOIN
        (SELECT HOUR(create_time) AS order_hour, cast(sum(data)/count(id) as DECIMAL(9, 3)) count
        FROM
        sd_device_data
        WHERE
        item_id = #{itemId} and device_id = #{deviceId}
            and
        DATE_FORMAT(create_time, '%Y-%m-%d')
        BETWEEN
        str_to_date(concat(#{today}," 00:00:00"),'%Y-%m-%d %T')
        AND
        str_to_date(concat(#{today}," 23:59:59"),'%Y-%m-%d %T')
        GROUP BY
        order_hour) as b
        ON a.order_hour = b.order_hour
        WHERE a.order_hour <![CDATA[ <= ]]> HOUR(now()) ORDER BY order_hour
    </select>
</mapper>

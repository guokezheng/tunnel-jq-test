<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tunnel.platform.mapper.event.SdWarningInfoMapper">

    <resultMap type="SdWarningInfo" id="SdWarningInfoResult">
        <result property="id"    column="id"    />
        <result property="warningType"    column="type_name"    />
        <result property="tunnelId"    column="tunnel_id"    />
        <result property="tunnelName"    column="tunnel_name"    />
        <result property="warningName"    column="warning_name"    />
        <result property="warningTime"    column="warning_time"    />
        <result property="position"    column="position"    />
        <result property="picture"    column="picture"    />
        <result property="vedio"    column="vedio"    />
        <result property="starts"    column="starts"    />
        <result property="ignores"    column="ignores"    />
        <result property="handles"    column="handles"    />
        <result property="captureId"    column="capture_id"    />
        <result property="linkedCamera"    column="linked_camera"    />
        <result property="inforSources"    column="infor_sources"    />
        <result property="processState"    column="process_state"    />
        <result property="handler"    column="handler"    />
        <result property="nickName"    column="nick_name"    />
        <result property="remark"    column="remark"    />
        <result property="warningTypeId"    column="warning_type_id"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="holeDirection"    column="hole_direction"    />
        <result property="eqId"  column="eq_id"/>
        <result property="eventEndTime" column="event_end_time"/>
    </resultMap>

	<resultMap id="tunnelResult" type="SdTunnels">
		<id  property="tunnelId" column="tunnel_id" />
		<result property="tunnelName" column="tunnel_name"   />
	</resultMap>

    <sql id="selectSdWarningInfoVo">
        select id, tunnel_id, warning_name, warning_time, infor_sources, process_state,
        	handler, remark, warning_type_id, create_by, create_time, update_by, update_time, position, picture,
        	 vedio, starts, ignores, handles, capture_id, linked_camera, hole_direction, eq_id, event_end_time
        from sd_warning_info
    </sql>

	<select id="selectSdWarningList" parameterType="SdWarningInfo" resultMap="SdWarningInfoResult">
        select A.id, A.tunnel_id, A.warning_name, A.warning_time, A.infor_sources, A.process_state,
        		A.remark, A.create_by, A.create_time, A.update_by, A.update_time ,A.warning_type_id,
        		A.position, A.picture, A.vedio, A.ignores, A.handles, A.capture_id, A.linked_camera, A.hole_direction,
        		C.tunnel_name, E.type_name, A.eq_id, A.event_end_time
        from sd_warning_info A
        left join sd_tunnels C on A.tunnel_id = C.tunnel_id
        left join sd_warning_type E on A.warning_type_id = E.id
        <where>
            <if test="inforSources != null  and inforSources != ''"> and A.infor_sources like concat('%', #{inforSources}, '%')</if>
            <if test="warningName != null  and warningName != ''"> and A.warning_name like concat('%', #{warningName}, '%')</if>
            <if test="processState != null  and processState != ''"> and A.process_state = #{processState}</if>
            <if test="params.deptId != null and params.deptId != ''">
                AND (C.dept_id = #{params.deptId} OR C.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{params.deptId},d.ancestors) ))
            </if>
        </where>
        order by A.warning_time desc
    </select>

    <select id="selectSdWarningInfoList" parameterType="SdWarningInfo" resultMap="SdWarningInfoResult">
        select A.id, A.tunnel_id, A.warning_name, A.warning_time, A.infor_sources, A.process_state,
        		A.handler, A.remark, A.create_by, A.create_time, A.update_by, A.update_time ,A.warning_type_id,
        		A.position, A.picture, A.vedio, A.starts, A.ignores, A.handles, A.capture_id, A.linked_camera, A.hole_direction,
        		B.nick_name, C.tunnel_name, D.cam_name, E.type_name, A.eq_id, A.event_end_time
        from sd_warning_info A
        left join sys_user B on A.handler = B.user_name
        left join sd_tunnels C on A.tunnel_id = C.tunnel_id
        left join sd_camera_details D on A.linked_camera = D.id
        left join sd_warning_type E on A.warning_type_id = E.id
        <where>
            <if test="inforSources != null  and inforSources != ''"> and A.infor_sources like concat('%', #{inforSources}, '%')</if>
            <if test="warningName != null  and warningName != ''"> and A.warning_name like concat('%', #{warningName}, '%')</if>
            <if test="params.beginWarningTime != null and params.beginWarningTime != '' and params.endWarningTime != null and params.endWarningTime != ''"> and warning_time between #{params.beginWarningTime} and #{params.endWarningTime}</if>
            <if test="processState != null  and processState != ''"> and A.process_state = #{processState}</if>
        	<if test="params.beginTime != null and params.beginTime != '' and params.endTime != null and params.endTime != ''"><!-- 开始时间检索 -->
				and A.warning_time between date_format(#{params.beginTime},'%Y-%m-%d %H:%i:%s') and date_format(#{params.endTime},'%Y-%m-%d %H:%i:%s')
			</if>
            <if test="eqId != null and eqId != ''"> and A.eq_id = #{eqId} </if>
            <if test="tunnelId != null and tunnelId != ''"> and A.tunnel_id = #{tunnelId} </if>
            <if test="warningTypeId != null and warningTypeId != ''"> and A.warning_type_id = #{warningTypeId} </if>
            <if test="params.deptId != null and params.deptId != ''">
                AND (C.dept_id = #{params.deptId} OR C.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{params.deptId},d.ancestors) ))
            </if>
        </where>
        order by A.warning_time desc
    </select>

    <select id="selectSdWarningInfoById" parameterType="Long" resultMap="SdWarningInfoResult">
        <include refid="selectSdWarningInfoVo"/>
        where id = #{id}
    </select>

    <select id="selectSdWarningInfoCount" parameterType="SdWarningInfo" resultType="map">
        select count(case when process_state=1 then 1 end)as process,count(case when process_state=0 then 0 end)as unProcess from sd_warning_info where TO_DAYS(warning_time) = TO_DAYS(NOW())
    </select>

    <select id="selectSdWarningInfoEcharts" parameterType="SdWarningInfo" resultType="map">
     <!-- SELECT count(1)as warningCount,
		DATE_FORMAT(x.warning_time,'%Y-%m-%d') AS warningDate
		from sd_warning_info x
		<where>
			<if test="beginTime != null  and beginTime != '' and endTime != null and endTime != '' ">
				x.warning_time &gt;= #{beginTime} and x.warning_time &lt;= #{endTime}
			</if>
		</where> -->
		select DATE_FORMAT(mycreatedate,'%m-%d') as warningTime,ifnull(COUNT(pv.warning_time), 0) as warningCount from (

		SELECT curdate() as mycreatedate

		union all

		SELECT date_sub(curdate(), interval 1 day) as mycreatedate

        union all

        SELECT date_sub(curdate(), interval 2 day) as mycreatedate

        union all

       SELECT date_sub(curdate(), interval 3 day) as mycreatedate

       union all

       SELECT date_sub(curdate(), interval 4 day) as mycreatedate

       union all

       SELECT date_sub(curdate(), interval 5 day) as mycreatedate

       union all

       SELECT date_sub(curdate(), interval 6 day) as mycreatedate

      ) as total
     LEFT JOIN sd_warning_info pv on DATE_FORMAT(pv.warning_time,'%Y-%m-%d')=total.mycreatedate GROUP BY mycreatedate
    </select>

    <select id="statisticsSearchWarningDay" resultType="java.util.Map">
        SELECT
            a.order_hour as order_hour, IFNULL(b.count,0) as count
        FROM(
            SELECT 0 AS order_hour UNION ALL SELECT 1 AS order_hour UNION ALL
            SELECT 2 AS order_hour UNION ALL SELECT 3 AS order_hour UNION ALL
            SELECT 4 AS order_hour UNION ALL SELECT 5 AS order_hour UNION ALL
            SELECT 6 AS order_hour UNION ALL SELECT 7 AS order_hour UNION ALL
            SELECT 8 AS order_hour UNION ALL SELECT 9 AS order_hour UNION ALL
            SELECT 10 AS order_hour UNION ALL SELECT 11 AS order_hour UNION ALL
            SELECT 12 AS order_hour UNION ALL SELECT 13 AS order_hour UNION ALL
            SELECT 14 AS order_hour UNION ALL SELECT 15 AS order_hour UNION ALL
            SELECT 16 AS order_hour UNION ALL SELECT 17 AS order_hour UNION ALL
            SELECT 18 AS order_hour UNION ALL SELECT 19 AS order_hour UNION ALL
            SELECT 20 AS order_hour UNION ALL SELECT 21 AS order_hour UNION ALL
            SELECT 22 AS order_hour UNION ALL SELECT 23 AS order_hour) as a
        LEFT JOIN
            (SELECT HOUR(warning_time) AS order_hour, count(id) AS count
            FROM
                sd_warning_info
            WHERE
                warning_type_id = 55
            and
                DATE_FORMAT(warning_time, '%Y-%m-%d')
            BETWEEN
                str_to_date(concat(#{startTime}," 00:00:00"),'%Y-%m-%d %T')
            AND
                str_to_date(concat(#{startTime}," 23:59:59"),'%Y-%m-%d %T')
            AND
                tunnel_id = #{tunnelId}
            GROUP BY
                order_hour) as b
        ON a.order_hour = b.order_hour
        WHERE a.order_hour <![CDATA[ <= ]]> HOUR(now()) ORDER BY order_hour
    </select>

    <select id="statisticsSearchWarningMon" resultType="java.util.Map">
        SELECT
            a.curr_date as curr_date, IFNULL(b.count,0) count
        FROM(
            SELECT date_format( date_add(CURDATE(), INTERVAL - t.help_topic_id DAY ), '%Y-%m-%d' ) AS 'curr_date'
            FROM mysql.help_topic t WHERE t.help_topic_id <![CDATA[<]]> DATEDIFF(CURDATE(), concat(#{startTime},'-01')) + 1) as a
        LEFT JOIN
            ( SELECT DATE_FORMAT(warning_time, "%Y-%m-%d") AS date_str,
                count(id) AS count
            FROM
                sd_warning_info
            WHERE
                1=1
            AND	warning_type_id = 55
            AND tunnel_id = #{tunnelId}
            GROUP BY DATE_FORMAT(warning_time, "%Y-%m-%d")) as b
        ON a.curr_date = b.date_str ORDER BY a.curr_date
    </select>

    <select id="statisticsSearcWarningYear" resultType="java.util.Map">
        SELECT
            a.date, IFNULL(b.count,0) count
        FROM
            (SELECT CONCAT(#{startTime},"-01") as date union
            SELECT CONCAT(#{startTime},"-02") as date union
            SELECT CONCAT(#{startTime},"-03") as date union
            SELECT CONCAT(#{startTime},"-04") as date union
            SELECT CONCAT(#{startTime},"-05") as date union
            SELECT CONCAT(#{startTime},"-06") as date union
            SELECT CONCAT(#{startTime},"-07") as date union
            SELECT CONCAT(#{startTime},"-08") as date union
            SELECT CONCAT(#{startTime},"-09") as date union
            SELECT CONCAT(#{startTime},"-10") as date union
            SELECT CONCAT(#{startTime},"-11") as date union
            SELECT CONCAT(#{startTime},"-12") as date ) a
        LEFT JOIN
            (SELECT DATE_FORMAT(warning_time, '%Y-%m') as stat_time, count(id) AS count
            FROM
                sd_warning_info
            WHERE date_format(warning_time,'%Y')= #{startTime}
            AND	warning_type_id = 55
            AND tunnel_id = #{tunnelId}
            GROUP BY date_format(warning_time,'%Y-%m')
            ) b
        on a.date = b.stat_time
        WHERE a.date <![CDATA[ <= ]]> DATE_FORMAT(CURDATE(), '%Y-%m')
        ORDER BY a.date
    </select>

    <select id="statisticsSearcMaxpWarningInfo" resultType="java.util.Map">
        SELECT
	        count(swf.id) AS warningCount, DATE_FORMAT(warning_time,'%Y-%m-%d') as warningTime, st.tunnel_name as tunnelName
        FROM
	        sd_warning_info swf
        left JOIN
	        sd_tunnels st
        ON
	        st.tunnel_id = swf.tunnel_id
        WHERE
	        swf.warning_type_id = 55
	    AND
	        YEAR(swf.warning_time) = #{startTime}
        GROUP BY
	        DATE_FORMAT(warning_time, '%Y-%m-%d')
        order by warningCount DESC limit 0,1
    </select>

    <insert id="insertSdWarningInfo" parameterType="SdWarningInfo" useGeneratedKeys="true" keyProperty="id">
        insert into sd_warning_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
        	<if test="tunnelId != null">tunnel_id,</if>
            <if test="warningName != null">warning_name,</if>
            <if test="warningTime != null">warning_time,</if>
            <if test="inforSources != null">infor_sources,</if>
            <if test="processState != null">process_state,</if>
            <if test="handler != null">handler,</if>
            <if test="remark != null">remark,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="position != null">position,</if>
            <if test="picture != null">picture,</if>
            <if test="vedio != null">vedio,</if>
            <if test="starts != null">starts,</if>
            <if test="ignores != null">ignores,</if>
            <if test="handles != null">handles,</if>
            <if test="captureId != null">capture_id,</if>
            <if test="linkedCamera != null">linked_camera,</if>
            <if test="holeDirection != null">hole_direction,</if>
            <if test="warningTypeId != null">warning_type_id,</if>
            <if test="eqId != null">eq_id,</if>
            <if test="eventEndTime != null">event_end_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
        	<if test="tunnelId != null">#{tunnelId},</if>
            <if test="warningName != null">#{warningName},</if>
            <if test="warningTime != null">#{warningTime},</if>
            <if test="inforSources != null">#{inforSources},</if>
            <if test="processState != null">#{processState},</if>
            <if test="handler != null">#{handler},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="position != null">#{position},</if>
            <if test="picture != null">#{picture},</if>
            <if test="vedio != null">#{vedio},</if>
            <if test="starts != null">#{starts},</if>
            <if test="ignores != null">#{ignores},</if>
            <if test="handles  != null">#{handles},</if>
            <if test="captureId != null">#{captureId},</if>
            <if test="linkedCamera != null">#{linkedCamera},</if>
            <if test="holeDirection != null">#{holeDirection},</if>
            <if test="warningTypeId != null">#{warningTypeId},</if>
            <if test="eqId != null">#{eqId},</if>
            <if test="eventEndTime != null">#{eventEndTime},</if>
         </trim>
    </insert>

    <update id="updateSdWarningInfoByProcessState" parameterType="SdWarningInfo">
        update sd_warning_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="processState != null">process_state = #{processState},</if>
        </trim>
        where process_state = '0'
    </update>
    <update id="updateSdWarningInfo" parameterType="SdWarningInfo">
        update sd_warning_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="inforSources != null">infor_sources = #{inforSources},</if>
            <if test="warningName != null">warning_name = #{warningName},</if>
            <if test="warningTime != null">warning_time = #{warningTime},</if>
            <if test="processState != null">process_state = #{processState},</if>
            <if test="handler != null">handler = #{handler},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="position != null">position = #{position},</if>
            <if test="picture != null">picture = #{picture},</if>
            <if test="vedio != null">vedio = #{vedio},</if>
            <if test="starts != null">starts = #{starts},</if>
            <if test="ignores != null">ignores = #{ignores},</if>
            <if test="handles != null">handles = #{handles},</if>
            <if test="captureId != null">capture_id = #{captureId},</if>
            <if test="linkedCamera != null">linked_camera = #{linkedCamera},</if>
            <if test="holeDirection != null">hole_direction = #{holeDirection},</if>
            <if test="eqId != null">eq_id = #{eqId},</if>
            <if test="eventEndTime != null">event_end_time = #{eventEndTime},</if>
        </trim>
        where id = #{id}
    </update>
    <delete id="deleteSdWarningInfoById" parameterType="Long">
        delete from sd_warning_info where id = #{id}
    </delete>

    <delete id="deleteSdWarningInfoByIds" parameterType="String">
        delete from sd_warning_info where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getAllPressureGaugesWarningMsg" resultMap="SdWarningInfoResult">
        select a.* from sd_warning_info a
        left join sd_tunnels b on b.tunnel_id = a.tunnel_id
        where TO_DAYS(a.warning_time) = TO_DAYS(NOW())
          and a.event_end_time is null and a.warning_type_id = 54
        <if test="deptId != null and deptId != ''">
            AND (b.dept_id = #{deptId} OR b.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{deptId},d.ancestors) ))
        </if>
    </select>

    <select id="selectWarningInfoMsgByYear" resultType="hashmap">
        SELECT
            IFNULL(b.num,0) num,a.date
        from
            (
                SELECT CONCAT(#{year},"-01") as date union
                SELECT CONCAT(#{year},"-02") as date union
                SELECT CONCAT(#{year},"-03") as date union
                SELECT CONCAT(#{year},"-04") as date union
                SELECT CONCAT(#{year},"-05") as date union
                SELECT CONCAT(#{year},"-06") as date union
                SELECT CONCAT(#{year},"-07") as date union
                SELECT CONCAT(#{year},"-08") as date union
                SELECT CONCAT(#{year},"-09") as date union
                SELECT CONCAT(#{year},"-10") as date union
                SELECT CONCAT(#{year},"-11") as date union
                SELECT CONCAT(#{year},"-12") as date
            ) a
                left join
            ( select DATE_FORMAT(c.warning_time, '%Y-%m') warning_time,count(c.id) num from
                sd_warning_info c
            left join sd_tunnels e on c.tunnel_id = e.tunnel_id
            where year ( c.warning_time) = #{year}
            <if test="tunnelId != null  and tunnelId != ''"> and c.tunnel_id = #{tunnelId}</if>
            <if test="params.deptId != null and params.deptId != ''">
                AND (e.dept_id = #{params.deptId} OR e.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{params.deptId},d.ancestors) ))
            </if>
              group by month ( c.warning_time )) b
            on a.date = b.warning_time
        WHERE a.date <![CDATA[ <= ]]> DATE_FORMAT(CURDATE(), '%Y-%m')
        order by a.date
    </select>

    <select id="selectWarningInfoMsgByMonth" resultType="hashmap">
        SELECT t1.curr_date,
               ifnull(t3.sum_flow_num,0) AS sum_flow_num
        FROM(
                SELECT date_format( date_add(CURDATE(), INTERVAL - t.help_topic_id DAY ), '%Y-%m-%d' ) AS 'curr_date'
                FROM mysql.help_topic t
                WHERE t.help_topic_id <![CDATA[<]]> DATEDIFF(CURDATE(), concat(#{month},'-01')) + 1) t1
                LEFT JOIN (
            SELECT DATE_FORMAT(t2.warning_time, "%Y-%m-%d" ) AS date_str,
                   count(t2.id ) AS sum_flow_num
            FROM sd_warning_info AS t2
            left join sd_tunnels b on b.tunnel_id = t2.tunnel_id
            WHERE 1=1
        <if test="tunnelId != null  and tunnelId != ''"> and t2.tunnel_id = #{tunnelId}</if>
        <if test="params.deptId != null and params.deptId != ''">
            AND (b.dept_id = #{params.deptId} OR b.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{params.deptId},d.ancestors) ))
        </if>
            GROUP BY DATE_FORMAT(t2.warning_time, "%Y-%m-%d" )) t3
                          ON t1.curr_date = t3.date_str  ORDER BY t1.curr_date
    </select>

    <select id="selectWarningInfoMsgByDay" resultType="hashmap">
        select a.order_hour as order_hour, ifnull(b.num, 0) as num
        from (
                 SELECT 0 AS order_hour UNION ALL SELECT 1 AS order_hour UNION ALL
                 SELECT 2 AS order_hour UNION ALL SELECT 3 AS order_hour UNION ALL
                 SELECT 4 AS order_hour UNION ALL SELECT 5 AS order_hour UNION ALL
                 SELECT 6 AS order_hour UNION ALL SELECT 7 AS order_hour UNION ALL
                 SELECT 8 AS order_hour UNION ALL SELECT 9 AS order_hour UNION ALL
                 SELECT 10 AS order_hour UNION ALL SELECT 11 AS order_hour UNION ALL
                 SELECT 12 AS order_hour UNION ALL SELECT 13 AS order_hour UNION ALL
                 SELECT 14 AS order_hour UNION ALL SELECT 15 AS order_hour UNION ALL
                 SELECT 16 AS order_hour UNION ALL SELECT 17 AS order_hour UNION ALL
                 SELECT 18 AS order_hour UNION ALL SELECT 19 AS order_hour UNION ALL
                 SELECT 20 AS order_hour UNION ALL SELECT 21 AS order_hour UNION ALL
                 SELECT 22 AS order_hour UNION ALL SELECT 23 AS order_hour
             ) as a
                 LEFT JOIN
             (
                 SELECT HOUR(c.warning_time) AS order_hour, count(c.id) AS num FROM sd_warning_info c
                 left join sd_tunnels e on e.tunnel_id = c.tunnel_id
                 WHERE c.warning_time <![CDATA[>=]]> str_to_date(#{params.datea},'%Y-%m-%d %T')
                   AND c.warning_time <![CDATA[<=]]> str_to_date(#{params.dateb},'%Y-%m-%d %T')
                    <if test="tunnelId != null  and tunnelId != ''"> and c.tunnel_id = #{tunnelId}</if>
                    <if test="params.deptId != null and params.deptId != ''">
                        AND (e.dept_id = #{params.deptId} OR e.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{params.deptId},d.ancestors) ))
                    </if>
                 GROUP BY order_hour
             ) b ON a.order_hour=b.order_hour WHERE a.order_hour <![CDATA[<=]]> hour(now())
        ORDER BY order_hour;
    </select>

    <select id="getTheWarningDataOfToday" resultType="hashmap">
        SELECT a.tunnel_id,a.warning_type_id,count(a.id) num,b.type_name,c.tunnel_name from sd_warning_info a
        left join sd_warning_type b on a.warning_type_id = b.id
        left join sd_tunnels c on c.tunnel_id = a.tunnel_id
        WHERE TO_DAYS(a.warning_time) = TO_DAYS(NOW())
        and a.warning_time <![CDATA[<=]]> now()
        <if test="tunnelId != null and tunnelId != ''"> and a.tunnel_id = #{tunnelId}</if>
        <if test="params.deptId != null and params.deptId != ''">
            AND (c.dept_id = #{params.deptId} OR c.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{params.deptId},d.ancestors) ))
        </if>
        GROUP BY a.warning_type_id
    </select>

    <select id="sdWarningInfoMapper" resultType="String">
        select concat(A.warning_time,A.infor_sources) a
        from sd_warning_info A
        left join sd_tunnels B on A.tunnel_id = B.tunnel_id
        where A.warning_type_id in (1,2,3,4,5,6,55) and A.process_state = 0
        AND (B.dept_id = #{deptId} OR B.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{deptId},d.ancestors) ))
        order by A.warning_time desc
    </select>

    <select id="getTrafficIncident" resultType="String">
        select concat(A.warning_time,A.infor_sources) a
        from sd_warning_info A
        left join sd_tunnels B on A.tunnel_id = B.tunnel_id
        where A.warning_type_id not in (1,2,3,4,5,6) and A.process_state = 0
        AND (B.dept_id = #{deptId} OR B.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{deptId},d.ancestors) ))
        order by A.warning_time desc
    </select>

    <select id="getWarningInfoCount" resultType="hashmap">
        select count(case when process_state=1 or process_state = 2 then 1 end) as process,count(*) as allmsg
        from sd_warning_info where TO_DAYS(warning_time) = TO_DAYS(NOW())
    </select>

    <select id="getWarningMessageCountOfToday" resultType="hashmap">
        select count(case when process_state=0 then 0 end) as unProcessOfToday,
               count(case when process_state=1 or process_state = 2 then 1 end) as processOfToday,
               count(*) as allWarningOfToday
        from sd_warning_info where TO_DAYS(warning_time) = TO_DAYS(NOW())
        <if test="tunnelId != null and tunnelId != ''"> and tunnel_id = #{tunnelId} </if>
    </select>

    <select id="getUnProcessWarningOfMonth" resultType="hashmap">
        SELECT count(*) as unProcessOfMonth from sd_warning_info
        WHERE DATE_FORMAT(warning_time,"%Y-%m") = DATE_FORMAT(now(),"%Y-%m") and process_state = "0"
        <if test="tunnelId != null and tunnelId != ''"> and tunnel_id = #{tunnelId} </if>
    </select>

    <select id="getWarningMassageOfUnProcess" parameterType="SdWarningInfo" resultMap="SdWarningInfoResult">
        select A.tunnel_id, A.warning_name, A.warning_time, A.infor_sources, A.process_state,
        A.handler, A.remark, A.create_by, A.create_time, A.update_by, A.update_time ,A.warning_type_id,
        A.position, A.picture, A.vedio, A.hole_direction,
        B.nick_name, C.tunnel_name, E.type_name
        from sd_warning_info A
        left join sys_user B on A.handler = B.user_name
        left join sd_tunnels C on A.tunnel_id = C.tunnel_id
        left join sd_camera_details D on A.linked_camera = D.id
        left join sd_warning_type E on A.warning_type_id = E.id
        where TO_DAYS(warning_time) = TO_DAYS(NOW())
            <if test="tunnelId != null and tunnelId != ''"> and A.tunnel_id = #{tunnelId} </if>
            <if test="processState != null  and processState != ''"> and A.process_state = #{processState}</if>
            <if test="params.deptId != null and params.deptId != ''">
                AND (C.dept_id = #{params.deptId} OR C.dept_id IN ( SELECT d.dept_id FROM sys_dept d WHERE FIND_IN_SET (#{params.deptId},d.ancestors) ))
            </if>
        order by A.warning_time desc
    </select>

</mapper>

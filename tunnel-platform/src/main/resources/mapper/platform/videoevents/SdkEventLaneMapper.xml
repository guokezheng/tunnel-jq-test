<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tunnel.platform.mapper.videoevents.SdkEventLaneMapper">
    
    <resultMap type="SdkEventLane" id="SdkEventLaneResult">
        <result property="id"    column="id"    />
        <result property="taskId"    column="taskId"    />
        <result property="start"    column="start"    />
        <result property="end"    column="end"    />
        <result property="coordinates"    column="coordinates"    />
        <result property="virtualLoop"    column="virtualLoop"    />
        <result property="laneType"    column="lane_type"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectSdkEventLaneVo">
        select id, taskId, start, end, coordinates, virtualLoop, lane_type, create_by, create_time, update_by, update_time from sdk_event_lane
    </sql>

    <select id="selectSdkEventLaneList" parameterType="SdkEventLane" resultMap="SdkEventLaneResult">
        <include refid="selectSdkEventLaneVo"/>
        <where>  
            <if test="taskId != null "> and taskId = #{taskId}</if>
            <if test="start != null  and start != ''"> and start = #{start}</if>
        </where>
    </select>
    
    <select id="selectSdkEventLaneById" parameterType="Integer" resultMap="SdkEventLaneResult">
        <include refid="selectSdkEventLaneVo"/>
        where id = #{id}
    </select>

    <select id="selectSdkEventLaneByTaskId" parameterType="Integer" resultMap="SdkEventLaneResult">
        <include refid="selectSdkEventLaneVo"/>
        where taskId = #{id}
    </select>

    <insert id="insertSdkEventLane" parameterType="SdkEventLane" useGeneratedKeys="true" keyProperty="id">
        insert into sdk_event_lane
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="taskId != null">taskId,</if>
            <if test="start != null">start,</if>
            <if test="end != null">end,</if>
            <if test="coordinates != null">coordinates,</if>
            <if test="virtualLoop != null">virtualLoop,</if>
            <if test="laneType != null">lane_type,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="taskId != null">#{taskId},</if>
            <if test="start != null">#{start},</if>
            <if test="end != null">#{end},</if>
            <if test="coordinates != null">#{coordinates},</if>
            <if test="virtualLoop != null">#{virtualLoop},</if>
            <if test="laneType != null">#{laneType},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateSdkEventLane" parameterType="SdkEventLane">
        update sdk_event_lane
        <trim prefix="SET" suffixOverrides=",">
            <if test="taskId != null">taskId = #{taskId},</if>
            <if test="start != null">start = #{start},</if>
            <if test="end != null">end = #{end},</if>
            <if test="coordinates != null">coordinates = #{coordinates},</if>
            <if test="virtualLoop != null">virtualLoop = #{virtualLoop},</if>
            <if test="laneType != null">lane_type = #{laneType},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSdkEventLaneById" parameterType="Integer">
        delete from sdk_event_lane where taskId = #{id}
    </delete>

    <delete id="deleteSdkEventLaneByIds" parameterType="String">
        delete from sdk_event_lane where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>